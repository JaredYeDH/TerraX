// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_server.proto

#ifndef PROTOBUF_server_5fserver_2eproto__INCLUDED
#define PROTOBUF_server_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace S2SPacket {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_server_5fserver_2eproto();
void protobuf_AssignDesc_server_5fserver_2eproto();
void protobuf_ShutdownFile_server_5fserver_2eproto();

class PktEnterPermissionReq;
class PktRegisterAck;
class PktRegisterReq;
class PktServerSync;

enum PktServerSync_SyncType {
  PktServerSync_SyncType_add = 0,
  PktServerSync_SyncType_update = 1,
  PktServerSync_SyncType_remove = 2,
  PktServerSync_SyncType_PktServerSync_SyncType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PktServerSync_SyncType_PktServerSync_SyncType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PktServerSync_SyncType_IsValid(int value);
const PktServerSync_SyncType PktServerSync_SyncType_SyncType_MIN = PktServerSync_SyncType_add;
const PktServerSync_SyncType PktServerSync_SyncType_SyncType_MAX = PktServerSync_SyncType_remove;
const int PktServerSync_SyncType_SyncType_ARRAYSIZE = PktServerSync_SyncType_SyncType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PktServerSync_SyncType_descriptor();
inline const ::std::string& PktServerSync_SyncType_Name(PktServerSync_SyncType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PktServerSync_SyncType_descriptor(), value);
}
inline bool PktServerSync_SyncType_Parse(
    const ::std::string& name, PktServerSync_SyncType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PktServerSync_SyncType>(
    PktServerSync_SyncType_descriptor(), name, value);
}
// ===================================================================

class PktRegisterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S2SPacket.PktRegisterReq) */ {
 public:
  PktRegisterReq();
  virtual ~PktRegisterReq();

  PktRegisterReq(const PktRegisterReq& from);

  inline PktRegisterReq& operator=(const PktRegisterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktRegisterReq& default_instance();

  void Swap(PktRegisterReq* other);

  // implements Message ----------------------------------------------

  inline PktRegisterReq* New() const { return New(NULL); }

  PktRegisterReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktRegisterReq& from);
  void MergeFrom(const PktRegisterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktRegisterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:S2SPacket.PktRegisterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktRegisterReq* default_instance_;
};
// -------------------------------------------------------------------

class PktRegisterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S2SPacket.PktRegisterAck) */ {
 public:
  PktRegisterAck();
  virtual ~PktRegisterAck();

  PktRegisterAck(const PktRegisterAck& from);

  inline PktRegisterAck& operator=(const PktRegisterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktRegisterAck& default_instance();

  void Swap(PktRegisterAck* other);

  // implements Message ----------------------------------------------

  inline PktRegisterAck* New() const { return New(NULL); }

  PktRegisterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktRegisterAck& from);
  void MergeFrom(const PktRegisterAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktRegisterAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 server_info = 1;
  void clear_server_info();
  static const int kServerInfoFieldNumber = 1;
  ::google::protobuf::int32 server_info() const;
  void set_server_info(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2SPacket.PktRegisterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 server_info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktRegisterAck* default_instance_;
};
// -------------------------------------------------------------------

class PktServerSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S2SPacket.PktServerSync) */ {
 public:
  PktServerSync();
  virtual ~PktServerSync();

  PktServerSync(const PktServerSync& from);

  inline PktServerSync& operator=(const PktServerSync& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktServerSync& default_instance();

  void Swap(PktServerSync* other);

  // implements Message ----------------------------------------------

  inline PktServerSync* New() const { return New(NULL); }

  PktServerSync* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktServerSync& from);
  void MergeFrom(const PktServerSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktServerSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PktServerSync_SyncType SyncType;
  static const SyncType add =
    PktServerSync_SyncType_add;
  static const SyncType update =
    PktServerSync_SyncType_update;
  static const SyncType remove =
    PktServerSync_SyncType_remove;
  static inline bool SyncType_IsValid(int value) {
    return PktServerSync_SyncType_IsValid(value);
  }
  static const SyncType SyncType_MIN =
    PktServerSync_SyncType_SyncType_MIN;
  static const SyncType SyncType_MAX =
    PktServerSync_SyncType_SyncType_MAX;
  static const int SyncType_ARRAYSIZE =
    PktServerSync_SyncType_SyncType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SyncType_descriptor() {
    return PktServerSync_SyncType_descriptor();
  }
  static inline const ::std::string& SyncType_Name(SyncType value) {
    return PktServerSync_SyncType_Name(value);
  }
  static inline bool SyncType_Parse(const ::std::string& name,
      SyncType* value) {
    return PktServerSync_SyncType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .S2SPacket.PktServerSync.SyncType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::S2SPacket::PktServerSync_SyncType type() const;
  void set_type(::S2SPacket::PktServerSync_SyncType value);

  // repeated int32 server_info = 2;
  int server_info_size() const;
  void clear_server_info();
  static const int kServerInfoFieldNumber = 2;
  ::google::protobuf::int32 server_info(int index) const;
  void set_server_info(int index, ::google::protobuf::int32 value);
  void add_server_info(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      server_info() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_server_info();

  // @@protoc_insertion_point(class_scope:S2SPacket.PktServerSync)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > server_info_;
  mutable int _server_info_cached_byte_size_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktServerSync* default_instance_;
};
// -------------------------------------------------------------------

class PktEnterPermissionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S2SPacket.PktEnterPermissionReq) */ {
 public:
  PktEnterPermissionReq();
  virtual ~PktEnterPermissionReq();

  PktEnterPermissionReq(const PktEnterPermissionReq& from);

  inline PktEnterPermissionReq& operator=(const PktEnterPermissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktEnterPermissionReq& default_instance();

  void Swap(PktEnterPermissionReq* other);

  // implements Message ----------------------------------------------

  inline PktEnterPermissionReq* New() const { return New(NULL); }

  PktEnterPermissionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktEnterPermissionReq& from);
  void MergeFrom(const PktEnterPermissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktEnterPermissionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string session_key = 2;
  void clear_session_key();
  static const int kSessionKeyFieldNumber = 2;
  const ::std::string& session_key() const;
  void set_session_key(const ::std::string& value);
  void set_session_key(const char* value);
  void set_session_key(const char* value, size_t size);
  ::std::string* mutable_session_key();
  ::std::string* release_session_key();
  void set_allocated_session_key(::std::string* session_key);

  // @@protoc_insertion_point(class_scope:S2SPacket.PktEnterPermissionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr session_key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktEnterPermissionReq* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PktRegisterReq

// -------------------------------------------------------------------

// PktRegisterAck

// optional int32 server_info = 1;
inline void PktRegisterAck::clear_server_info() {
  server_info_ = 0;
}
inline ::google::protobuf::int32 PktRegisterAck::server_info() const {
  // @@protoc_insertion_point(field_get:S2SPacket.PktRegisterAck.server_info)
  return server_info_;
}
inline void PktRegisterAck::set_server_info(::google::protobuf::int32 value) {
  
  server_info_ = value;
  // @@protoc_insertion_point(field_set:S2SPacket.PktRegisterAck.server_info)
}

// -------------------------------------------------------------------

// PktServerSync

// optional .S2SPacket.PktServerSync.SyncType type = 1;
inline void PktServerSync::clear_type() {
  type_ = 0;
}
inline ::S2SPacket::PktServerSync_SyncType PktServerSync::type() const {
  // @@protoc_insertion_point(field_get:S2SPacket.PktServerSync.type)
  return static_cast< ::S2SPacket::PktServerSync_SyncType >(type_);
}
inline void PktServerSync::set_type(::S2SPacket::PktServerSync_SyncType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:S2SPacket.PktServerSync.type)
}

// repeated int32 server_info = 2;
inline int PktServerSync::server_info_size() const {
  return server_info_.size();
}
inline void PktServerSync::clear_server_info() {
  server_info_.Clear();
}
inline ::google::protobuf::int32 PktServerSync::server_info(int index) const {
  // @@protoc_insertion_point(field_get:S2SPacket.PktServerSync.server_info)
  return server_info_.Get(index);
}
inline void PktServerSync::set_server_info(int index, ::google::protobuf::int32 value) {
  server_info_.Set(index, value);
  // @@protoc_insertion_point(field_set:S2SPacket.PktServerSync.server_info)
}
inline void PktServerSync::add_server_info(::google::protobuf::int32 value) {
  server_info_.Add(value);
  // @@protoc_insertion_point(field_add:S2SPacket.PktServerSync.server_info)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PktServerSync::server_info() const {
  // @@protoc_insertion_point(field_list:S2SPacket.PktServerSync.server_info)
  return server_info_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PktServerSync::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:S2SPacket.PktServerSync.server_info)
  return &server_info_;
}

// -------------------------------------------------------------------

// PktEnterPermissionReq

// optional string account_name = 1;
inline void PktEnterPermissionReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktEnterPermissionReq::account_name() const {
  // @@protoc_insertion_point(field_get:S2SPacket.PktEnterPermissionReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktEnterPermissionReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S2SPacket.PktEnterPermissionReq.account_name)
}
inline void PktEnterPermissionReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S2SPacket.PktEnterPermissionReq.account_name)
}
inline void PktEnterPermissionReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S2SPacket.PktEnterPermissionReq.account_name)
}
inline ::std::string* PktEnterPermissionReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:S2SPacket.PktEnterPermissionReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktEnterPermissionReq::release_account_name() {
  // @@protoc_insertion_point(field_release:S2SPacket.PktEnterPermissionReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktEnterPermissionReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:S2SPacket.PktEnterPermissionReq.account_name)
}

// optional string session_key = 2;
inline void PktEnterPermissionReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktEnterPermissionReq::session_key() const {
  // @@protoc_insertion_point(field_get:S2SPacket.PktEnterPermissionReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktEnterPermissionReq::set_session_key(const ::std::string& value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S2SPacket.PktEnterPermissionReq.session_key)
}
inline void PktEnterPermissionReq::set_session_key(const char* value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S2SPacket.PktEnterPermissionReq.session_key)
}
inline void PktEnterPermissionReq::set_session_key(const char* value, size_t size) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S2SPacket.PktEnterPermissionReq.session_key)
}
inline ::std::string* PktEnterPermissionReq::mutable_session_key() {
  
  // @@protoc_insertion_point(field_mutable:S2SPacket.PktEnterPermissionReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktEnterPermissionReq::release_session_key() {
  // @@protoc_insertion_point(field_release:S2SPacket.PktEnterPermissionReq.session_key)
  
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktEnterPermissionReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    
  } else {
    
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:S2SPacket.PktEnterPermissionReq.session_key)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace S2SPacket

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::S2SPacket::PktServerSync_SyncType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S2SPacket::PktServerSync_SyncType>() {
  return ::S2SPacket::PktServerSync_SyncType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fserver_2eproto__INCLUDED
