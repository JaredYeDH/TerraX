// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_server.proto

#ifndef PROTOBUF_client_5fserver_2eproto__INCLUDED
#define PROTOBUF_client_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace packet_cs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_client_5fserver_2eproto();
void protobuf_AssignDesc_client_5fserver_2eproto();
void protobuf_ShutdownFile_client_5fserver_2eproto();

class PktAccountLoginReq;
class PktGameLoginReq;
class PktRoleListAck;

// ===================================================================

class PktAccountLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_cs.PktAccountLoginReq) */ {
 public:
  PktAccountLoginReq();
  virtual ~PktAccountLoginReq();

  PktAccountLoginReq(const PktAccountLoginReq& from);

  inline PktAccountLoginReq& operator=(const PktAccountLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktAccountLoginReq& default_instance();

  void Swap(PktAccountLoginReq* other);

  // implements Message ----------------------------------------------

  inline PktAccountLoginReq* New() const { return New(NULL); }

  PktAccountLoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktAccountLoginReq& from);
  void MergeFrom(const PktAccountLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktAccountLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:packet_cs.PktAccountLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5fserver_2eproto();
  friend void protobuf_AssignDesc_client_5fserver_2eproto();
  friend void protobuf_ShutdownFile_client_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktAccountLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class PktGameLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_cs.PktGameLoginReq) */ {
 public:
  PktGameLoginReq();
  virtual ~PktGameLoginReq();

  PktGameLoginReq(const PktGameLoginReq& from);

  inline PktGameLoginReq& operator=(const PktGameLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktGameLoginReq& default_instance();

  void Swap(PktGameLoginReq* other);

  // implements Message ----------------------------------------------

  inline PktGameLoginReq* New() const { return New(NULL); }

  PktGameLoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktGameLoginReq& from);
  void MergeFrom(const PktGameLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktGameLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string session_key = 2;
  void clear_session_key();
  static const int kSessionKeyFieldNumber = 2;
  const ::std::string& session_key() const;
  void set_session_key(const ::std::string& value);
  void set_session_key(const char* value);
  void set_session_key(const char* value, size_t size);
  ::std::string* mutable_session_key();
  ::std::string* release_session_key();
  void set_allocated_session_key(::std::string* session_key);

  // optional string ip_address = 3;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 3;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // @@protoc_insertion_point(class_scope:packet_cs.PktGameLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr session_key_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5fserver_2eproto();
  friend void protobuf_AssignDesc_client_5fserver_2eproto();
  friend void protobuf_ShutdownFile_client_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktGameLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class PktRoleListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_cs.PktRoleListAck) */ {
 public:
  PktRoleListAck();
  virtual ~PktRoleListAck();

  PktRoleListAck(const PktRoleListAck& from);

  inline PktRoleListAck& operator=(const PktRoleListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PktRoleListAck& default_instance();

  void Swap(PktRoleListAck* other);

  // implements Message ----------------------------------------------

  inline PktRoleListAck* New() const { return New(NULL); }

  PktRoleListAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PktRoleListAck& from);
  void MergeFrom(const PktRoleListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PktRoleListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string role_name_list = 1;
  int role_name_list_size() const;
  void clear_role_name_list();
  static const int kRoleNameListFieldNumber = 1;
  const ::std::string& role_name_list(int index) const;
  ::std::string* mutable_role_name_list(int index);
  void set_role_name_list(int index, const ::std::string& value);
  void set_role_name_list(int index, const char* value);
  void set_role_name_list(int index, const char* value, size_t size);
  ::std::string* add_role_name_list();
  void add_role_name_list(const ::std::string& value);
  void add_role_name_list(const char* value);
  void add_role_name_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& role_name_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_role_name_list();

  // @@protoc_insertion_point(class_scope:packet_cs.PktRoleListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> role_name_list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5fserver_2eproto();
  friend void protobuf_AssignDesc_client_5fserver_2eproto();
  friend void protobuf_ShutdownFile_client_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PktRoleListAck* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PktAccountLoginReq

// optional string account_name = 1;
inline void PktAccountLoginReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktAccountLoginReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktAccountLoginReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktAccountLoginReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktAccountLoginReq.account_name)
}
inline void PktAccountLoginReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktAccountLoginReq.account_name)
}
inline void PktAccountLoginReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktAccountLoginReq.account_name)
}
inline ::std::string* PktAccountLoginReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktAccountLoginReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktAccountLoginReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_cs.PktAccountLoginReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktAccountLoginReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktAccountLoginReq.account_name)
}

// optional string password = 2;
inline void PktAccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktAccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktAccountLoginReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktAccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktAccountLoginReq.password)
}
inline void PktAccountLoginReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktAccountLoginReq.password)
}
inline void PktAccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktAccountLoginReq.password)
}
inline ::std::string* PktAccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktAccountLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktAccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:packet_cs.PktAccountLoginReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktAccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktAccountLoginReq.password)
}

// -------------------------------------------------------------------

// PktGameLoginReq

// optional string account_name = 1;
inline void PktGameLoginReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktGameLoginReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktGameLoginReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.account_name)
}
inline void PktGameLoginReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.account_name)
}
inline void PktGameLoginReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.account_name)
}
inline ::std::string* PktGameLoginReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktGameLoginReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktGameLoginReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.account_name)
}

// optional string session_key = 2;
inline void PktGameLoginReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktGameLoginReq::session_key() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktGameLoginReq::set_session_key(const ::std::string& value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.session_key)
}
inline void PktGameLoginReq::set_session_key(const char* value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.session_key)
}
inline void PktGameLoginReq::set_session_key(const char* value, size_t size) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.session_key)
}
inline ::std::string* PktGameLoginReq::mutable_session_key() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktGameLoginReq::release_session_key() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.session_key)
  
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktGameLoginReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    
  } else {
    
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.session_key)
}

// optional string ip_address = 3;
inline void PktGameLoginReq::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PktGameLoginReq::ip_address() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktGameLoginReq::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.ip_address)
}
inline void PktGameLoginReq::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.ip_address)
}
inline void PktGameLoginReq::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.ip_address)
}
inline ::std::string* PktGameLoginReq::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PktGameLoginReq::release_ip_address() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PktGameLoginReq::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.ip_address)
}

// -------------------------------------------------------------------

// PktRoleListAck

// repeated string role_name_list = 1;
inline int PktRoleListAck::role_name_list_size() const {
  return role_name_list_.size();
}
inline void PktRoleListAck::clear_role_name_list() {
  role_name_list_.Clear();
}
inline const ::std::string& PktRoleListAck::role_name_list(int index) const {
  // @@protoc_insertion_point(field_get:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Get(index);
}
inline ::std::string* PktRoleListAck::mutable_role_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Mutable(index);
}
inline void PktRoleListAck::set_role_name_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:packet_cs.PktRoleListAck.role_name_list)
  role_name_list_.Mutable(index)->assign(value);
}
inline void PktRoleListAck::set_role_name_list(int index, const char* value) {
  role_name_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:packet_cs.PktRoleListAck.role_name_list)
}
inline void PktRoleListAck::set_role_name_list(int index, const char* value, size_t size) {
  role_name_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktRoleListAck.role_name_list)
}
inline ::std::string* PktRoleListAck::add_role_name_list() {
  // @@protoc_insertion_point(field_add_mutable:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Add();
}
inline void PktRoleListAck::add_role_name_list(const ::std::string& value) {
  role_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:packet_cs.PktRoleListAck.role_name_list)
}
inline void PktRoleListAck::add_role_name_list(const char* value) {
  role_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:packet_cs.PktRoleListAck.role_name_list)
}
inline void PktRoleListAck::add_role_name_list(const char* value, size_t size) {
  role_name_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:packet_cs.PktRoleListAck.role_name_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PktRoleListAck::role_name_list() const {
  // @@protoc_insertion_point(field_list:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PktRoleListAck::mutable_role_name_list() {
  // @@protoc_insertion_point(field_mutable_list:packet_cs.PktRoleListAck.role_name_list)
  return &role_name_list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_cs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_5fserver_2eproto__INCLUDED
