// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace packet_cs {

namespace {

const ::google::protobuf::Descriptor* MsgReqLoginCL_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqLoginCL_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLoginResultLC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLoginResultLC_reflection_ = NULL;
const ::google::protobuf::Descriptor* PktGameLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PktGameLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PktRoleListAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PktRoleListAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ServerStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_client_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_client_5fserver_2eproto() {
  protobuf_AddDesc_client_5fserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client_server.proto");
  GOOGLE_CHECK(file != NULL);
  MsgReqLoginCL_descriptor_ = file->message_type(0);
  static const int MsgReqLoginCL_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqLoginCL, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqLoginCL, password_),
  };
  MsgReqLoginCL_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqLoginCL_descriptor_,
      MsgReqLoginCL::default_instance_,
      MsgReqLoginCL_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgReqLoginCL),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqLoginCL, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqLoginCL, _is_default_instance_));
  ServerInfo_descriptor_ = file->message_type(1);
  static const int ServerInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, region_showindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_showindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, recommond_),
  };
  ServerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerInfo_descriptor_,
      ServerInfo::default_instance_,
      ServerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, _is_default_instance_));
  MsgLoginResultLC_descriptor_ = file->message_type(2);
  static const int MsgLoginResultLC_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResultLC, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResultLC, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResultLC, servers_),
  };
  MsgLoginResultLC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgLoginResultLC_descriptor_,
      MsgLoginResultLC::default_instance_,
      MsgLoginResultLC_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgLoginResultLC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResultLC, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResultLC, _is_default_instance_));
  PktGameLoginReq_descriptor_ = file->message_type(3);
  static const int PktGameLoginReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, session_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, ip_address_),
  };
  PktGameLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PktGameLoginReq_descriptor_,
      PktGameLoginReq::default_instance_,
      PktGameLoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(PktGameLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, _is_default_instance_));
  PktRoleListAck_descriptor_ = file->message_type(4);
  static const int PktRoleListAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktRoleListAck, role_name_list_),
  };
  PktRoleListAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PktRoleListAck_descriptor_,
      PktRoleListAck::default_instance_,
      PktRoleListAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(PktRoleListAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktRoleListAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktRoleListAck, _is_default_instance_));
  ServerStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client_5fserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqLoginCL_descriptor_, &MsgReqLoginCL::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerInfo_descriptor_, &ServerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgLoginResultLC_descriptor_, &MsgLoginResultLC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PktGameLoginReq_descriptor_, &PktGameLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PktRoleListAck_descriptor_, &PktRoleListAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client_5fserver_2eproto() {
  delete MsgReqLoginCL::default_instance_;
  delete MsgReqLoginCL_reflection_;
  delete ServerInfo::default_instance_;
  delete ServerInfo_reflection_;
  delete MsgLoginResultLC::default_instance_;
  delete MsgLoginResultLC_reflection_;
  delete PktGameLoginReq::default_instance_;
  delete PktGameLoginReq_reflection_;
  delete PktRoleListAck::default_instance_;
  delete PktRoleListAck_reflection_;
}

void protobuf_AddDesc_client_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_client_5fserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023client_server.proto\022\tpacket_cs\"7\n\rMsgR"
    "eqLoginCL\022\024\n\014account_name\030\001 \001(\t\022\020\n\010passw"
    "ord\030\002 \001(\t\"\274\001\n\nServerInfo\022\022\n\nserver_uid\030\001"
    " \001(\005\022\030\n\020region_showindex\030\002 \001(\005\022\016\n\006region"
    "\030\003 \001(\t\022\030\n\020server_showindex\030\004 \001(\005\022\023\n\013serv"
    "er_name\030\005 \001(\t\022.\n\rserver_status\030\006 \001(\0162\027.p"
    "acket_cs.ServerStatus\022\021\n\trecommond\030\007 \001(\010"
    "\"Y\n\020MsgLoginResultLC\022\016\n\006result\030\001 \001(\005\022\r\n\005"
    "token\030\002 \001(\t\022&\n\007servers\030\003 \003(\0132\025.packet_cs"
    ".ServerInfo\"P\n\017PktGameLoginReq\022\024\n\014accoun"
    "t_name\030\001 \001(\t\022\023\n\013session_key\030\002 \001(\t\022\022\n\nip_"
    "address\030\003 \001(\t\"(\n\016PktRoleListAck\022\026\n\016role_"
    "name_list\030\001 \003(\t*E\n\014ServerStatus\022\014\n\010MAINT"
    "AIN\020\000\022\010\n\004FREE\020\001\022\010\n\004BUSY\020\002\022\t\n\005CROWD\020\003\022\010\n\004"
    "FULL\020\004b\006proto3", 574);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client_server.proto", &protobuf_RegisterTypes);
  MsgReqLoginCL::default_instance_ = new MsgReqLoginCL();
  ServerInfo::default_instance_ = new ServerInfo();
  MsgLoginResultLC::default_instance_ = new MsgLoginResultLC();
  PktGameLoginReq::default_instance_ = new PktGameLoginReq();
  PktRoleListAck::default_instance_ = new PktRoleListAck();
  MsgReqLoginCL::default_instance_->InitAsDefaultInstance();
  ServerInfo::default_instance_->InitAsDefaultInstance();
  MsgLoginResultLC::default_instance_->InitAsDefaultInstance();
  PktGameLoginReq::default_instance_->InitAsDefaultInstance();
  PktRoleListAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_5fserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_5fserver_2eproto {
  StaticDescriptorInitializer_client_5fserver_2eproto() {
    protobuf_AddDesc_client_5fserver_2eproto();
  }
} static_descriptor_initializer_client_5fserver_2eproto_;
const ::google::protobuf::EnumDescriptor* ServerStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerStatus_descriptor_;
}
bool ServerStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReqLoginCL::kAccountNameFieldNumber;
const int MsgReqLoginCL::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReqLoginCL::MsgReqLoginCL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.MsgReqLoginCL)
}

void MsgReqLoginCL::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgReqLoginCL::MsgReqLoginCL(const MsgReqLoginCL& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.MsgReqLoginCL)
}

void MsgReqLoginCL::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgReqLoginCL::~MsgReqLoginCL() {
  // @@protoc_insertion_point(destructor:packet_cs.MsgReqLoginCL)
  SharedDtor();
}

void MsgReqLoginCL::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgReqLoginCL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqLoginCL::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqLoginCL_descriptor_;
}

const MsgReqLoginCL& MsgReqLoginCL::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

MsgReqLoginCL* MsgReqLoginCL::default_instance_ = NULL;

MsgReqLoginCL* MsgReqLoginCL::New(::google::protobuf::Arena* arena) const {
  MsgReqLoginCL* n = new MsgReqLoginCL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqLoginCL::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.MsgReqLoginCL)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgReqLoginCL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.MsgReqLoginCL)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.MsgReqLoginCL.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.MsgReqLoginCL.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.MsgReqLoginCL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.MsgReqLoginCL)
  return false;
#undef DO_
}

void MsgReqLoginCL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.MsgReqLoginCL)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.MsgReqLoginCL.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.MsgReqLoginCL.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.MsgReqLoginCL)
}

::google::protobuf::uint8* MsgReqLoginCL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.MsgReqLoginCL)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.MsgReqLoginCL.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.MsgReqLoginCL.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.MsgReqLoginCL)
  return target;
}

int MsgReqLoginCL::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.MsgReqLoginCL)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqLoginCL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.MsgReqLoginCL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgReqLoginCL* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgReqLoginCL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.MsgReqLoginCL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.MsgReqLoginCL)
    MergeFrom(*source);
  }
}

void MsgReqLoginCL::MergeFrom(const MsgReqLoginCL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.MsgReqLoginCL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void MsgReqLoginCL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.MsgReqLoginCL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqLoginCL::CopyFrom(const MsgReqLoginCL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.MsgReqLoginCL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqLoginCL::IsInitialized() const {

  return true;
}

void MsgReqLoginCL::Swap(MsgReqLoginCL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqLoginCL::InternalSwap(MsgReqLoginCL* other) {
  account_name_.Swap(&other->account_name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqLoginCL::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqLoginCL_descriptor_;
  metadata.reflection = MsgReqLoginCL_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqLoginCL

// optional string account_name = 1;
void MsgReqLoginCL::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqLoginCL::account_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.MsgReqLoginCL.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqLoginCL::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.MsgReqLoginCL.account_name)
}
 void MsgReqLoginCL::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.MsgReqLoginCL.account_name)
}
 void MsgReqLoginCL::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.MsgReqLoginCL.account_name)
}
 ::std::string* MsgReqLoginCL::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.MsgReqLoginCL.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqLoginCL::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_cs.MsgReqLoginCL.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqLoginCL::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.MsgReqLoginCL.account_name)
}

// optional string password = 2;
void MsgReqLoginCL::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqLoginCL::password() const {
  // @@protoc_insertion_point(field_get:packet_cs.MsgReqLoginCL.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqLoginCL::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.MsgReqLoginCL.password)
}
 void MsgReqLoginCL::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.MsgReqLoginCL.password)
}
 void MsgReqLoginCL::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.MsgReqLoginCL.password)
}
 ::std::string* MsgReqLoginCL::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.MsgReqLoginCL.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqLoginCL::release_password() {
  // @@protoc_insertion_point(field_release:packet_cs.MsgReqLoginCL.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqLoginCL::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.MsgReqLoginCL.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo::kServerUidFieldNumber;
const int ServerInfo::kRegionShowindexFieldNumber;
const int ServerInfo::kRegionFieldNumber;
const int ServerInfo::kServerShowindexFieldNumber;
const int ServerInfo::kServerNameFieldNumber;
const int ServerInfo::kServerStatusFieldNumber;
const int ServerInfo::kRecommondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo::ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.ServerInfo)
}

void ServerInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServerInfo::ServerInfo(const ServerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.ServerInfo)
}

void ServerInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  server_uid_ = 0;
  region_showindex_ = 0;
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_showindex_ = 0;
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_status_ = 0;
  recommond_ = false;
}

ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:packet_cs.ServerInfo)
  SharedDtor();
}

void ServerInfo::SharedDtor() {
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerInfo_descriptor_;
}

const ServerInfo& ServerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

ServerInfo* ServerInfo::default_instance_ = NULL;

ServerInfo* ServerInfo::New(::google::protobuf::Arena* arena) const {
  ServerInfo* n = new ServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.ServerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(server_uid_, region_showindex_);
  ZR_(server_showindex_, recommond_);
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.ServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 server_uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_region_showindex;
        break;
      }

      // optional int32 region_showindex = 2;
      case 2: {
        if (tag == 16) {
         parse_region_showindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_showindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_region;
        break;
      }

      // optional string region = 3;
      case 3: {
        if (tag == 26) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.ServerInfo.region"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_server_showindex;
        break;
      }

      // optional int32 server_showindex = 4;
      case 4: {
        if (tag == 32) {
         parse_server_showindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_showindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_server_name;
        break;
      }

      // optional string server_name = 5;
      case 5: {
        if (tag == 42) {
         parse_server_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), this->server_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.ServerInfo.server_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_server_status;
        break;
      }

      // optional .packet_cs.ServerStatus server_status = 6;
      case 6: {
        if (tag == 48) {
         parse_server_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_server_status(static_cast< ::packet_cs::ServerStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_recommond;
        break;
      }

      // optional bool recommond = 7;
      case 7: {
        if (tag == 56) {
         parse_recommond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recommond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.ServerInfo)
  return false;
#undef DO_
}

void ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.ServerInfo)
  // optional int32 server_uid = 1;
  if (this->server_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_uid(), output);
  }

  // optional int32 region_showindex = 2;
  if (this->region_showindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->region_showindex(), output);
  }

  // optional string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.ServerInfo.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  // optional int32 server_showindex = 4;
  if (this->server_showindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->server_showindex(), output);
  }

  // optional string server_name = 5;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.ServerInfo.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->server_name(), output);
  }

  // optional .packet_cs.ServerStatus server_status = 6;
  if (this->server_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->server_status(), output);
  }

  // optional bool recommond = 7;
  if (this->recommond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->recommond(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.ServerInfo)
}

::google::protobuf::uint8* ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.ServerInfo)
  // optional int32 server_uid = 1;
  if (this->server_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_uid(), target);
  }

  // optional int32 region_showindex = 2;
  if (this->region_showindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->region_showindex(), target);
  }

  // optional string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.ServerInfo.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  // optional int32 server_showindex = 4;
  if (this->server_showindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->server_showindex(), target);
  }

  // optional string server_name = 5;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.ServerInfo.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->server_name(), target);
  }

  // optional .packet_cs.ServerStatus server_status = 6;
  if (this->server_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->server_status(), target);
  }

  // optional bool recommond = 7;
  if (this->recommond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->recommond(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.ServerInfo)
  return target;
}

int ServerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.ServerInfo)
  int total_size = 0;

  // optional int32 server_uid = 1;
  if (this->server_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_uid());
  }

  // optional int32 region_showindex = 2;
  if (this->region_showindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_showindex());
  }

  // optional string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // optional int32 server_showindex = 4;
  if (this->server_showindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_showindex());
  }

  // optional string server_name = 5;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // optional .packet_cs.ServerStatus server_status = 6;
  if (this->server_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->server_status());
  }

  // optional bool recommond = 7;
  if (this->recommond() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ServerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.ServerInfo)
    MergeFrom(*source);
  }
}

void ServerInfo::MergeFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.server_uid() != 0) {
    set_server_uid(from.server_uid());
  }
  if (from.region_showindex() != 0) {
    set_region_showindex(from.region_showindex());
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.server_showindex() != 0) {
    set_server_showindex(from.server_showindex());
  }
  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_status() != 0) {
    set_server_status(from.server_status());
  }
  if (from.recommond() != 0) {
    set_recommond(from.recommond());
  }
}

void ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo::IsInitialized() const {

  return true;
}

void ServerInfo::Swap(ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo::InternalSwap(ServerInfo* other) {
  std::swap(server_uid_, other->server_uid_);
  std::swap(region_showindex_, other->region_showindex_);
  region_.Swap(&other->region_);
  std::swap(server_showindex_, other->server_showindex_);
  server_name_.Swap(&other->server_name_);
  std::swap(server_status_, other->server_status_);
  std::swap(recommond_, other->recommond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerInfo_descriptor_;
  metadata.reflection = ServerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerInfo

// optional int32 server_uid = 1;
void ServerInfo::clear_server_uid() {
  server_uid_ = 0;
}
 ::google::protobuf::int32 ServerInfo::server_uid() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.server_uid)
  return server_uid_;
}
 void ServerInfo::set_server_uid(::google::protobuf::int32 value) {
  
  server_uid_ = value;
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.server_uid)
}

// optional int32 region_showindex = 2;
void ServerInfo::clear_region_showindex() {
  region_showindex_ = 0;
}
 ::google::protobuf::int32 ServerInfo::region_showindex() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.region_showindex)
  return region_showindex_;
}
 void ServerInfo::set_region_showindex(::google::protobuf::int32 value) {
  
  region_showindex_ = value;
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.region_showindex)
}

// optional string region = 3;
void ServerInfo::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerInfo::region() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.region)
  return region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerInfo::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.region)
}
 void ServerInfo::set_region(const char* value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.ServerInfo.region)
}
 void ServerInfo::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.ServerInfo.region)
}
 ::std::string* ServerInfo::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.ServerInfo.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerInfo::release_region() {
  // @@protoc_insertion_point(field_release:packet_cs.ServerInfo.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerInfo::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.ServerInfo.region)
}

// optional int32 server_showindex = 4;
void ServerInfo::clear_server_showindex() {
  server_showindex_ = 0;
}
 ::google::protobuf::int32 ServerInfo::server_showindex() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.server_showindex)
  return server_showindex_;
}
 void ServerInfo::set_server_showindex(::google::protobuf::int32 value) {
  
  server_showindex_ = value;
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.server_showindex)
}

// optional string server_name = 5;
void ServerInfo::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerInfo::server_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.server_name)
  return server_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerInfo::set_server_name(const ::std::string& value) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.server_name)
}
 void ServerInfo::set_server_name(const char* value) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.ServerInfo.server_name)
}
 void ServerInfo::set_server_name(const char* value, size_t size) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.ServerInfo.server_name)
}
 ::std::string* ServerInfo::mutable_server_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.ServerInfo.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerInfo::release_server_name() {
  // @@protoc_insertion_point(field_release:packet_cs.ServerInfo.server_name)
  
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerInfo::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    
  } else {
    
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.ServerInfo.server_name)
}

// optional .packet_cs.ServerStatus server_status = 6;
void ServerInfo::clear_server_status() {
  server_status_ = 0;
}
 ::packet_cs::ServerStatus ServerInfo::server_status() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.server_status)
  return static_cast< ::packet_cs::ServerStatus >(server_status_);
}
 void ServerInfo::set_server_status(::packet_cs::ServerStatus value) {
  
  server_status_ = value;
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.server_status)
}

// optional bool recommond = 7;
void ServerInfo::clear_recommond() {
  recommond_ = false;
}
 bool ServerInfo::recommond() const {
  // @@protoc_insertion_point(field_get:packet_cs.ServerInfo.recommond)
  return recommond_;
}
 void ServerInfo::set_recommond(bool value) {
  
  recommond_ = value;
  // @@protoc_insertion_point(field_set:packet_cs.ServerInfo.recommond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLoginResultLC::kResultFieldNumber;
const int MsgLoginResultLC::kTokenFieldNumber;
const int MsgLoginResultLC::kServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLoginResultLC::MsgLoginResultLC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.MsgLoginResultLC)
}

void MsgLoginResultLC::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgLoginResultLC::MsgLoginResultLC(const MsgLoginResultLC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.MsgLoginResultLC)
}

void MsgLoginResultLC::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgLoginResultLC::~MsgLoginResultLC() {
  // @@protoc_insertion_point(destructor:packet_cs.MsgLoginResultLC)
  SharedDtor();
}

void MsgLoginResultLC::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgLoginResultLC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLoginResultLC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLoginResultLC_descriptor_;
}

const MsgLoginResultLC& MsgLoginResultLC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

MsgLoginResultLC* MsgLoginResultLC::default_instance_ = NULL;

MsgLoginResultLC* MsgLoginResultLC::New(::google::protobuf::Arena* arena) const {
  MsgLoginResultLC* n = new MsgLoginResultLC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLoginResultLC::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.MsgLoginResultLC)
  result_ = 0;
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servers_.Clear();
}

bool MsgLoginResultLC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.MsgLoginResultLC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional string token = 2;
      case 2: {
        if (tag == 18) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.MsgLoginResultLC.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_servers;
        break;
      }

      // repeated .packet_cs.ServerInfo servers = 3;
      case 3: {
        if (tag == 26) {
         parse_servers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_servers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_servers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_servers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.MsgLoginResultLC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.MsgLoginResultLC)
  return false;
#undef DO_
}

void MsgLoginResultLC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.MsgLoginResultLC)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.MsgLoginResultLC.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // repeated .packet_cs.ServerInfo servers = 3;
  for (unsigned int i = 0, n = this->servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->servers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.MsgLoginResultLC)
}

::google::protobuf::uint8* MsgLoginResultLC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.MsgLoginResultLC)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.MsgLoginResultLC.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // repeated .packet_cs.ServerInfo servers = 3;
  for (unsigned int i = 0, n = this->servers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->servers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.MsgLoginResultLC)
  return target;
}

int MsgLoginResultLC::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.MsgLoginResultLC)
  int total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // repeated .packet_cs.ServerInfo servers = 3;
  total_size += 1 * this->servers_size();
  for (int i = 0; i < this->servers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->servers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLoginResultLC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.MsgLoginResultLC)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgLoginResultLC* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLoginResultLC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.MsgLoginResultLC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.MsgLoginResultLC)
    MergeFrom(*source);
  }
}

void MsgLoginResultLC::MergeFrom(const MsgLoginResultLC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.MsgLoginResultLC)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  servers_.MergeFrom(from.servers_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void MsgLoginResultLC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.MsgLoginResultLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLoginResultLC::CopyFrom(const MsgLoginResultLC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.MsgLoginResultLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLoginResultLC::IsInitialized() const {

  return true;
}

void MsgLoginResultLC::Swap(MsgLoginResultLC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLoginResultLC::InternalSwap(MsgLoginResultLC* other) {
  std::swap(result_, other->result_);
  token_.Swap(&other->token_);
  servers_.UnsafeArenaSwap(&other->servers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLoginResultLC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLoginResultLC_descriptor_;
  metadata.reflection = MsgLoginResultLC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLoginResultLC

// optional int32 result = 1;
void MsgLoginResultLC::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 MsgLoginResultLC::result() const {
  // @@protoc_insertion_point(field_get:packet_cs.MsgLoginResultLC.result)
  return result_;
}
 void MsgLoginResultLC::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_cs.MsgLoginResultLC.result)
}

// optional string token = 2;
void MsgLoginResultLC::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgLoginResultLC::token() const {
  // @@protoc_insertion_point(field_get:packet_cs.MsgLoginResultLC.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgLoginResultLC::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.MsgLoginResultLC.token)
}
 void MsgLoginResultLC::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.MsgLoginResultLC.token)
}
 void MsgLoginResultLC::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.MsgLoginResultLC.token)
}
 ::std::string* MsgLoginResultLC::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.MsgLoginResultLC.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgLoginResultLC::release_token() {
  // @@protoc_insertion_point(field_release:packet_cs.MsgLoginResultLC.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgLoginResultLC::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.MsgLoginResultLC.token)
}

// repeated .packet_cs.ServerInfo servers = 3;
int MsgLoginResultLC::servers_size() const {
  return servers_.size();
}
void MsgLoginResultLC::clear_servers() {
  servers_.Clear();
}
const ::packet_cs::ServerInfo& MsgLoginResultLC::servers(int index) const {
  // @@protoc_insertion_point(field_get:packet_cs.MsgLoginResultLC.servers)
  return servers_.Get(index);
}
::packet_cs::ServerInfo* MsgLoginResultLC::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:packet_cs.MsgLoginResultLC.servers)
  return servers_.Mutable(index);
}
::packet_cs::ServerInfo* MsgLoginResultLC::add_servers() {
  // @@protoc_insertion_point(field_add:packet_cs.MsgLoginResultLC.servers)
  return servers_.Add();
}
::google::protobuf::RepeatedPtrField< ::packet_cs::ServerInfo >*
MsgLoginResultLC::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:packet_cs.MsgLoginResultLC.servers)
  return &servers_;
}
const ::google::protobuf::RepeatedPtrField< ::packet_cs::ServerInfo >&
MsgLoginResultLC::servers() const {
  // @@protoc_insertion_point(field_list:packet_cs.MsgLoginResultLC.servers)
  return servers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PktGameLoginReq::kAccountNameFieldNumber;
const int PktGameLoginReq::kSessionKeyFieldNumber;
const int PktGameLoginReq::kIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PktGameLoginReq::PktGameLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.PktGameLoginReq)
}

void PktGameLoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PktGameLoginReq::PktGameLoginReq(const PktGameLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.PktGameLoginReq)
}

void PktGameLoginReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PktGameLoginReq::~PktGameLoginReq() {
  // @@protoc_insertion_point(destructor:packet_cs.PktGameLoginReq)
  SharedDtor();
}

void PktGameLoginReq::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PktGameLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PktGameLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PktGameLoginReq_descriptor_;
}

const PktGameLoginReq& PktGameLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

PktGameLoginReq* PktGameLoginReq::default_instance_ = NULL;

PktGameLoginReq* PktGameLoginReq::New(::google::protobuf::Arena* arena) const {
  PktGameLoginReq* n = new PktGameLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PktGameLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.PktGameLoginReq)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PktGameLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.PktGameLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktGameLoginReq.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_session_key;
        break;
      }

      // optional string session_key = 2;
      case 2: {
        if (tag == 18) {
         parse_session_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_key().data(), this->session_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktGameLoginReq.session_key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ip_address;
        break;
      }

      // optional string ip_address = 3;
      case 3: {
        if (tag == 26) {
         parse_ip_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), this->ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktGameLoginReq.ip_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.PktGameLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.PktGameLoginReq)
  return false;
#undef DO_
}

void PktGameLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.PktGameLoginReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_key(), output);
  }

  // optional string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.PktGameLoginReq)
}

::google::protobuf::uint8* PktGameLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.PktGameLoginReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_key(), target);
  }

  // optional string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.PktGameLoginReq)
  return target;
}

int PktGameLoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.PktGameLoginReq)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());
  }

  // optional string ip_address = 3;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PktGameLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.PktGameLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PktGameLoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PktGameLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.PktGameLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.PktGameLoginReq)
    MergeFrom(*source);
  }
}

void PktGameLoginReq::MergeFrom(const PktGameLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.PktGameLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.session_key().size() > 0) {

    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
}

void PktGameLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.PktGameLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PktGameLoginReq::CopyFrom(const PktGameLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.PktGameLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PktGameLoginReq::IsInitialized() const {

  return true;
}

void PktGameLoginReq::Swap(PktGameLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PktGameLoginReq::InternalSwap(PktGameLoginReq* other) {
  account_name_.Swap(&other->account_name_);
  session_key_.Swap(&other->session_key_);
  ip_address_.Swap(&other->ip_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PktGameLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PktGameLoginReq_descriptor_;
  metadata.reflection = PktGameLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PktGameLoginReq

// optional string account_name = 1;
void PktGameLoginReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktGameLoginReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.account_name)
}
 void PktGameLoginReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.account_name)
}
 void PktGameLoginReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.account_name)
}
 ::std::string* PktGameLoginReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktGameLoginReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.account_name)
}

// optional string session_key = 2;
void PktGameLoginReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktGameLoginReq::session_key() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_session_key(const ::std::string& value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.session_key)
}
 void PktGameLoginReq::set_session_key(const char* value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.session_key)
}
 void PktGameLoginReq::set_session_key(const char* value, size_t size) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.session_key)
}
 ::std::string* PktGameLoginReq::mutable_session_key() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktGameLoginReq::release_session_key() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.session_key)
  
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    
  } else {
    
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.session_key)
}

// optional string ip_address = 3;
void PktGameLoginReq::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktGameLoginReq::ip_address() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.ip_address)
}
 void PktGameLoginReq::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.ip_address)
}
 void PktGameLoginReq::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.ip_address)
}
 ::std::string* PktGameLoginReq::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktGameLoginReq::release_ip_address() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.ip_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PktRoleListAck::kRoleNameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PktRoleListAck::PktRoleListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.PktRoleListAck)
}

void PktRoleListAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PktRoleListAck::PktRoleListAck(const PktRoleListAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.PktRoleListAck)
}

void PktRoleListAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

PktRoleListAck::~PktRoleListAck() {
  // @@protoc_insertion_point(destructor:packet_cs.PktRoleListAck)
  SharedDtor();
}

void PktRoleListAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PktRoleListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PktRoleListAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PktRoleListAck_descriptor_;
}

const PktRoleListAck& PktRoleListAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

PktRoleListAck* PktRoleListAck::default_instance_ = NULL;

PktRoleListAck* PktRoleListAck::New(::google::protobuf::Arena* arena) const {
  PktRoleListAck* n = new PktRoleListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PktRoleListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.PktRoleListAck)
  role_name_list_.Clear();
}

bool PktRoleListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.PktRoleListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string role_name_list = 1;
      case 1: {
        if (tag == 10) {
         parse_role_name_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_role_name_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role_name_list(this->role_name_list_size() - 1).data(),
            this->role_name_list(this->role_name_list_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktRoleListAck.role_name_list"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_role_name_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.PktRoleListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.PktRoleListAck)
  return false;
#undef DO_
}

void PktRoleListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.PktRoleListAck)
  // repeated string role_name_list = 1;
  for (int i = 0; i < this->role_name_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role_name_list(i).data(), this->role_name_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktRoleListAck.role_name_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->role_name_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.PktRoleListAck)
}

::google::protobuf::uint8* PktRoleListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.PktRoleListAck)
  // repeated string role_name_list = 1;
  for (int i = 0; i < this->role_name_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role_name_list(i).data(), this->role_name_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktRoleListAck.role_name_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->role_name_list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.PktRoleListAck)
  return target;
}

int PktRoleListAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.PktRoleListAck)
  int total_size = 0;

  // repeated string role_name_list = 1;
  total_size += 1 * this->role_name_list_size();
  for (int i = 0; i < this->role_name_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->role_name_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PktRoleListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.PktRoleListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PktRoleListAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PktRoleListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.PktRoleListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.PktRoleListAck)
    MergeFrom(*source);
  }
}

void PktRoleListAck::MergeFrom(const PktRoleListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.PktRoleListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  role_name_list_.MergeFrom(from.role_name_list_);
}

void PktRoleListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.PktRoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PktRoleListAck::CopyFrom(const PktRoleListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.PktRoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PktRoleListAck::IsInitialized() const {

  return true;
}

void PktRoleListAck::Swap(PktRoleListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PktRoleListAck::InternalSwap(PktRoleListAck* other) {
  role_name_list_.UnsafeArenaSwap(&other->role_name_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PktRoleListAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PktRoleListAck_descriptor_;
  metadata.reflection = PktRoleListAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PktRoleListAck

// repeated string role_name_list = 1;
int PktRoleListAck::role_name_list_size() const {
  return role_name_list_.size();
}
void PktRoleListAck::clear_role_name_list() {
  role_name_list_.Clear();
}
 const ::std::string& PktRoleListAck::role_name_list(int index) const {
  // @@protoc_insertion_point(field_get:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Get(index);
}
 ::std::string* PktRoleListAck::mutable_role_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Mutable(index);
}
 void PktRoleListAck::set_role_name_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:packet_cs.PktRoleListAck.role_name_list)
  role_name_list_.Mutable(index)->assign(value);
}
 void PktRoleListAck::set_role_name_list(int index, const char* value) {
  role_name_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:packet_cs.PktRoleListAck.role_name_list)
}
 void PktRoleListAck::set_role_name_list(int index, const char* value, size_t size) {
  role_name_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktRoleListAck.role_name_list)
}
 ::std::string* PktRoleListAck::add_role_name_list() {
  // @@protoc_insertion_point(field_add_mutable:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Add();
}
 void PktRoleListAck::add_role_name_list(const ::std::string& value) {
  role_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:packet_cs.PktRoleListAck.role_name_list)
}
 void PktRoleListAck::add_role_name_list(const char* value) {
  role_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:packet_cs.PktRoleListAck.role_name_list)
}
 void PktRoleListAck::add_role_name_list(const char* value, size_t size) {
  role_name_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:packet_cs.PktRoleListAck.role_name_list)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PktRoleListAck::role_name_list() const {
  // @@protoc_insertion_point(field_list:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PktRoleListAck::mutable_role_name_list() {
  // @@protoc_insertion_point(field_mutable_list:packet_cs.PktRoleListAck.role_name_list)
  return &role_name_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_cs

// @@protoc_insertion_point(global_scope)
