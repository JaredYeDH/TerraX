// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace packet_cs {

namespace {

const ::google::protobuf::Descriptor* PktAccountLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PktAccountLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PktGameLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PktGameLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PktRoleListAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PktRoleListAck_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_client_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_client_5fserver_2eproto() {
  protobuf_AddDesc_client_5fserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client_server.proto");
  GOOGLE_CHECK(file != NULL);
  PktAccountLoginReq_descriptor_ = file->message_type(0);
  static const int PktAccountLoginReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktAccountLoginReq, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktAccountLoginReq, password_),
  };
  PktAccountLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PktAccountLoginReq_descriptor_,
      PktAccountLoginReq::default_instance_,
      PktAccountLoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(PktAccountLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktAccountLoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktAccountLoginReq, _is_default_instance_));
  PktGameLoginReq_descriptor_ = file->message_type(1);
  static const int PktGameLoginReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, session_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, ip_address_),
  };
  PktGameLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PktGameLoginReq_descriptor_,
      PktGameLoginReq::default_instance_,
      PktGameLoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(PktGameLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktGameLoginReq, _is_default_instance_));
  PktRoleListAck_descriptor_ = file->message_type(2);
  static const int PktRoleListAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktRoleListAck, role_name_list_),
  };
  PktRoleListAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PktRoleListAck_descriptor_,
      PktRoleListAck::default_instance_,
      PktRoleListAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(PktRoleListAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktRoleListAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PktRoleListAck, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client_5fserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PktAccountLoginReq_descriptor_, &PktAccountLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PktGameLoginReq_descriptor_, &PktGameLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PktRoleListAck_descriptor_, &PktRoleListAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client_5fserver_2eproto() {
  delete PktAccountLoginReq::default_instance_;
  delete PktAccountLoginReq_reflection_;
  delete PktGameLoginReq::default_instance_;
  delete PktGameLoginReq_reflection_;
  delete PktRoleListAck::default_instance_;
  delete PktRoleListAck_reflection_;
}

void protobuf_AddDesc_client_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_client_5fserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023client_server.proto\022\tpacket_cs\"<\n\022PktA"
    "ccountLoginReq\022\024\n\014account_name\030\001 \001(\t\022\020\n\010"
    "password\030\002 \001(\t\"P\n\017PktGameLoginReq\022\024\n\014acc"
    "ount_name\030\001 \001(\t\022\023\n\013session_key\030\002 \001(\t\022\022\n\n"
    "ip_address\030\003 \001(\t\"(\n\016PktRoleListAck\022\026\n\016ro"
    "le_name_list\030\001 \003(\tb\006proto3", 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client_server.proto", &protobuf_RegisterTypes);
  PktAccountLoginReq::default_instance_ = new PktAccountLoginReq();
  PktGameLoginReq::default_instance_ = new PktGameLoginReq();
  PktRoleListAck::default_instance_ = new PktRoleListAck();
  PktAccountLoginReq::default_instance_->InitAsDefaultInstance();
  PktGameLoginReq::default_instance_->InitAsDefaultInstance();
  PktRoleListAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_5fserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_5fserver_2eproto {
  StaticDescriptorInitializer_client_5fserver_2eproto() {
    protobuf_AddDesc_client_5fserver_2eproto();
  }
} static_descriptor_initializer_client_5fserver_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PktAccountLoginReq::kAccountNameFieldNumber;
const int PktAccountLoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PktAccountLoginReq::PktAccountLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.PktAccountLoginReq)
}

void PktAccountLoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PktAccountLoginReq::PktAccountLoginReq(const PktAccountLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.PktAccountLoginReq)
}

void PktAccountLoginReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PktAccountLoginReq::~PktAccountLoginReq() {
  // @@protoc_insertion_point(destructor:packet_cs.PktAccountLoginReq)
  SharedDtor();
}

void PktAccountLoginReq::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PktAccountLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PktAccountLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PktAccountLoginReq_descriptor_;
}

const PktAccountLoginReq& PktAccountLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

PktAccountLoginReq* PktAccountLoginReq::default_instance_ = NULL;

PktAccountLoginReq* PktAccountLoginReq::New(::google::protobuf::Arena* arena) const {
  PktAccountLoginReq* n = new PktAccountLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PktAccountLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.PktAccountLoginReq)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PktAccountLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.PktAccountLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktAccountLoginReq.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktAccountLoginReq.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.PktAccountLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.PktAccountLoginReq)
  return false;
#undef DO_
}

void PktAccountLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.PktAccountLoginReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktAccountLoginReq.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktAccountLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.PktAccountLoginReq)
}

::google::protobuf::uint8* PktAccountLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.PktAccountLoginReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktAccountLoginReq.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktAccountLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.PktAccountLoginReq)
  return target;
}

int PktAccountLoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.PktAccountLoginReq)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PktAccountLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.PktAccountLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PktAccountLoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PktAccountLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.PktAccountLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.PktAccountLoginReq)
    MergeFrom(*source);
  }
}

void PktAccountLoginReq::MergeFrom(const PktAccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.PktAccountLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PktAccountLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.PktAccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PktAccountLoginReq::CopyFrom(const PktAccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.PktAccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PktAccountLoginReq::IsInitialized() const {

  return true;
}

void PktAccountLoginReq::Swap(PktAccountLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PktAccountLoginReq::InternalSwap(PktAccountLoginReq* other) {
  account_name_.Swap(&other->account_name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PktAccountLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PktAccountLoginReq_descriptor_;
  metadata.reflection = PktAccountLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PktAccountLoginReq

// optional string account_name = 1;
void PktAccountLoginReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktAccountLoginReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktAccountLoginReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktAccountLoginReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktAccountLoginReq.account_name)
}
 void PktAccountLoginReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktAccountLoginReq.account_name)
}
 void PktAccountLoginReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktAccountLoginReq.account_name)
}
 ::std::string* PktAccountLoginReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktAccountLoginReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktAccountLoginReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_cs.PktAccountLoginReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktAccountLoginReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktAccountLoginReq.account_name)
}

// optional string password = 2;
void PktAccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktAccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktAccountLoginReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktAccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktAccountLoginReq.password)
}
 void PktAccountLoginReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktAccountLoginReq.password)
}
 void PktAccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktAccountLoginReq.password)
}
 ::std::string* PktAccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktAccountLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktAccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:packet_cs.PktAccountLoginReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktAccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktAccountLoginReq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PktGameLoginReq::kAccountNameFieldNumber;
const int PktGameLoginReq::kSessionKeyFieldNumber;
const int PktGameLoginReq::kIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PktGameLoginReq::PktGameLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.PktGameLoginReq)
}

void PktGameLoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PktGameLoginReq::PktGameLoginReq(const PktGameLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.PktGameLoginReq)
}

void PktGameLoginReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PktGameLoginReq::~PktGameLoginReq() {
  // @@protoc_insertion_point(destructor:packet_cs.PktGameLoginReq)
  SharedDtor();
}

void PktGameLoginReq::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PktGameLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PktGameLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PktGameLoginReq_descriptor_;
}

const PktGameLoginReq& PktGameLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

PktGameLoginReq* PktGameLoginReq::default_instance_ = NULL;

PktGameLoginReq* PktGameLoginReq::New(::google::protobuf::Arena* arena) const {
  PktGameLoginReq* n = new PktGameLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PktGameLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.PktGameLoginReq)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PktGameLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.PktGameLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktGameLoginReq.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_session_key;
        break;
      }

      // optional string session_key = 2;
      case 2: {
        if (tag == 18) {
         parse_session_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_key().data(), this->session_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktGameLoginReq.session_key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ip_address;
        break;
      }

      // optional string ip_address = 3;
      case 3: {
        if (tag == 26) {
         parse_ip_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), this->ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktGameLoginReq.ip_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.PktGameLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.PktGameLoginReq)
  return false;
#undef DO_
}

void PktGameLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.PktGameLoginReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_key(), output);
  }

  // optional string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.PktGameLoginReq)
}

::google::protobuf::uint8* PktGameLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.PktGameLoginReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_key(), target);
  }

  // optional string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktGameLoginReq.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.PktGameLoginReq)
  return target;
}

int PktGameLoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.PktGameLoginReq)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());
  }

  // optional string ip_address = 3;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PktGameLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.PktGameLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PktGameLoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PktGameLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.PktGameLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.PktGameLoginReq)
    MergeFrom(*source);
  }
}

void PktGameLoginReq::MergeFrom(const PktGameLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.PktGameLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.session_key().size() > 0) {

    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
}

void PktGameLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.PktGameLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PktGameLoginReq::CopyFrom(const PktGameLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.PktGameLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PktGameLoginReq::IsInitialized() const {

  return true;
}

void PktGameLoginReq::Swap(PktGameLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PktGameLoginReq::InternalSwap(PktGameLoginReq* other) {
  account_name_.Swap(&other->account_name_);
  session_key_.Swap(&other->session_key_);
  ip_address_.Swap(&other->ip_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PktGameLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PktGameLoginReq_descriptor_;
  metadata.reflection = PktGameLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PktGameLoginReq

// optional string account_name = 1;
void PktGameLoginReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktGameLoginReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.account_name)
}
 void PktGameLoginReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.account_name)
}
 void PktGameLoginReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.account_name)
}
 ::std::string* PktGameLoginReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktGameLoginReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.account_name)
}

// optional string session_key = 2;
void PktGameLoginReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktGameLoginReq::session_key() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_session_key(const ::std::string& value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.session_key)
}
 void PktGameLoginReq::set_session_key(const char* value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.session_key)
}
 void PktGameLoginReq::set_session_key(const char* value, size_t size) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.session_key)
}
 ::std::string* PktGameLoginReq::mutable_session_key() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktGameLoginReq::release_session_key() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.session_key)
  
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    
  } else {
    
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.session_key)
}

// optional string ip_address = 3;
void PktGameLoginReq::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PktGameLoginReq::ip_address() const {
  // @@protoc_insertion_point(field_get:packet_cs.PktGameLoginReq.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_cs.PktGameLoginReq.ip_address)
}
 void PktGameLoginReq::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_cs.PktGameLoginReq.ip_address)
}
 void PktGameLoginReq::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktGameLoginReq.ip_address)
}
 ::std::string* PktGameLoginReq::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:packet_cs.PktGameLoginReq.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PktGameLoginReq::release_ip_address() {
  // @@protoc_insertion_point(field_release:packet_cs.PktGameLoginReq.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PktGameLoginReq::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:packet_cs.PktGameLoginReq.ip_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PktRoleListAck::kRoleNameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PktRoleListAck::PktRoleListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_cs.PktRoleListAck)
}

void PktRoleListAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PktRoleListAck::PktRoleListAck(const PktRoleListAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_cs.PktRoleListAck)
}

void PktRoleListAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

PktRoleListAck::~PktRoleListAck() {
  // @@protoc_insertion_point(destructor:packet_cs.PktRoleListAck)
  SharedDtor();
}

void PktRoleListAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PktRoleListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PktRoleListAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PktRoleListAck_descriptor_;
}

const PktRoleListAck& PktRoleListAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fserver_2eproto();
  return *default_instance_;
}

PktRoleListAck* PktRoleListAck::default_instance_ = NULL;

PktRoleListAck* PktRoleListAck::New(::google::protobuf::Arena* arena) const {
  PktRoleListAck* n = new PktRoleListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PktRoleListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_cs.PktRoleListAck)
  role_name_list_.Clear();
}

bool PktRoleListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_cs.PktRoleListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string role_name_list = 1;
      case 1: {
        if (tag == 10) {
         parse_role_name_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_role_name_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role_name_list(this->role_name_list_size() - 1).data(),
            this->role_name_list(this->role_name_list_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_cs.PktRoleListAck.role_name_list"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_role_name_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_cs.PktRoleListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_cs.PktRoleListAck)
  return false;
#undef DO_
}

void PktRoleListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_cs.PktRoleListAck)
  // repeated string role_name_list = 1;
  for (int i = 0; i < this->role_name_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role_name_list(i).data(), this->role_name_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktRoleListAck.role_name_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->role_name_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_cs.PktRoleListAck)
}

::google::protobuf::uint8* PktRoleListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_cs.PktRoleListAck)
  // repeated string role_name_list = 1;
  for (int i = 0; i < this->role_name_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role_name_list(i).data(), this->role_name_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_cs.PktRoleListAck.role_name_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->role_name_list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_cs.PktRoleListAck)
  return target;
}

int PktRoleListAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_cs.PktRoleListAck)
  int total_size = 0;

  // repeated string role_name_list = 1;
  total_size += 1 * this->role_name_list_size();
  for (int i = 0; i < this->role_name_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->role_name_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PktRoleListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_cs.PktRoleListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PktRoleListAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PktRoleListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_cs.PktRoleListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_cs.PktRoleListAck)
    MergeFrom(*source);
  }
}

void PktRoleListAck::MergeFrom(const PktRoleListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_cs.PktRoleListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  role_name_list_.MergeFrom(from.role_name_list_);
}

void PktRoleListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_cs.PktRoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PktRoleListAck::CopyFrom(const PktRoleListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_cs.PktRoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PktRoleListAck::IsInitialized() const {

  return true;
}

void PktRoleListAck::Swap(PktRoleListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PktRoleListAck::InternalSwap(PktRoleListAck* other) {
  role_name_list_.UnsafeArenaSwap(&other->role_name_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PktRoleListAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PktRoleListAck_descriptor_;
  metadata.reflection = PktRoleListAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PktRoleListAck

// repeated string role_name_list = 1;
int PktRoleListAck::role_name_list_size() const {
  return role_name_list_.size();
}
void PktRoleListAck::clear_role_name_list() {
  role_name_list_.Clear();
}
 const ::std::string& PktRoleListAck::role_name_list(int index) const {
  // @@protoc_insertion_point(field_get:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Get(index);
}
 ::std::string* PktRoleListAck::mutable_role_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Mutable(index);
}
 void PktRoleListAck::set_role_name_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:packet_cs.PktRoleListAck.role_name_list)
  role_name_list_.Mutable(index)->assign(value);
}
 void PktRoleListAck::set_role_name_list(int index, const char* value) {
  role_name_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:packet_cs.PktRoleListAck.role_name_list)
}
 void PktRoleListAck::set_role_name_list(int index, const char* value, size_t size) {
  role_name_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:packet_cs.PktRoleListAck.role_name_list)
}
 ::std::string* PktRoleListAck::add_role_name_list() {
  // @@protoc_insertion_point(field_add_mutable:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_.Add();
}
 void PktRoleListAck::add_role_name_list(const ::std::string& value) {
  role_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:packet_cs.PktRoleListAck.role_name_list)
}
 void PktRoleListAck::add_role_name_list(const char* value) {
  role_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:packet_cs.PktRoleListAck.role_name_list)
}
 void PktRoleListAck::add_role_name_list(const char* value, size_t size) {
  role_name_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:packet_cs.PktRoleListAck.role_name_list)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PktRoleListAck::role_name_list() const {
  // @@protoc_insertion_point(field_list:packet_cs.PktRoleListAck.role_name_list)
  return role_name_list_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PktRoleListAck::mutable_role_name_list() {
  // @@protoc_insertion_point(field_mutable_list:packet_cs.PktRoleListAck.role_name_list)
  return &role_name_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_cs

// @@protoc_insertion_point(global_scope)
