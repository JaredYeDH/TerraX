// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace packet_ss {

namespace {

const ::google::protobuf::Descriptor* MsgRegisterSW_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRegisterSW_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRegisterWS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRegisterWS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgServerInfoWS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgServerInfoWS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgServerInfoWS_ServerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgServerInfoWS_ServerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogin2NodeGN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogin2NodeGN_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgReqServerListLM_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqServerListLM_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgServerListML_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgServerListML_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncLoginServerIdML_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncLoginServerIdML_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgWorldRegAtMasterWM_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgWorldRegAtMasterWM_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgWorldRegAtMasterAckMW_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgWorldRegAtMasterAckMW_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgReqEnterServerLS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqEnterServerLS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgReqEnterServerResultSL_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqEnterServerResultSL_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_5fserver_2eproto() {
  protobuf_AddDesc_server_5fserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server_server.proto");
  GOOGLE_CHECK(file != NULL);
  MsgRegisterSW_descriptor_ = file->message_type(0);
  static const int MsgRegisterSW_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, listen_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, listen_port_),
  };
  MsgRegisterSW_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgRegisterSW_descriptor_,
      MsgRegisterSW::default_instance_,
      MsgRegisterSW_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgRegisterSW),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, _is_default_instance_));
  MsgRegisterWS_descriptor_ = file->message_type(1);
  static const int MsgRegisterWS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterWS, server_id_),
  };
  MsgRegisterWS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgRegisterWS_descriptor_,
      MsgRegisterWS::default_instance_,
      MsgRegisterWS_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgRegisterWS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterWS, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterWS, _is_default_instance_));
  MsgServerInfoWS_descriptor_ = file->message_type(2);
  static const int MsgServerInfoWS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS, server_info_),
  };
  MsgServerInfoWS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgServerInfoWS_descriptor_,
      MsgServerInfoWS::default_instance_,
      MsgServerInfoWS_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgServerInfoWS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS, _is_default_instance_));
  MsgServerInfoWS_ServerInfo_descriptor_ = MsgServerInfoWS_descriptor_->nested_type(0);
  static const int MsgServerInfoWS_ServerInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, listen_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, listen_port_),
  };
  MsgServerInfoWS_ServerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgServerInfoWS_ServerInfo_descriptor_,
      MsgServerInfoWS_ServerInfo::default_instance_,
      MsgServerInfoWS_ServerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgServerInfoWS_ServerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, _is_default_instance_));
  MsgLogin2NodeGN_descriptor_ = file->message_type(3);
  static const int MsgLogin2NodeGN_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, server_id_),
  };
  MsgLogin2NodeGN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgLogin2NodeGN_descriptor_,
      MsgLogin2NodeGN::default_instance_,
      MsgLogin2NodeGN_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgLogin2NodeGN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, _is_default_instance_));
  MsgReqServerListLM_descriptor_ = file->message_type(4);
  static const int MsgReqServerListLM_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqServerListLM, account_name_),
  };
  MsgReqServerListLM_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqServerListLM_descriptor_,
      MsgReqServerListLM::default_instance_,
      MsgReqServerListLM_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgReqServerListLM),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqServerListLM, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqServerListLM, _is_default_instance_));
  MsgServerListML_descriptor_ = file->message_type(5);
  static const int MsgServerListML_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerListML, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerListML, servers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerListML, post_back_),
  };
  MsgServerListML_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgServerListML_descriptor_,
      MsgServerListML::default_instance_,
      MsgServerListML_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgServerListML),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerListML, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerListML, _is_default_instance_));
  MsgSyncLoginServerIdML_descriptor_ = file->message_type(6);
  static const int MsgSyncLoginServerIdML_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncLoginServerIdML, server_id_),
  };
  MsgSyncLoginServerIdML_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSyncLoginServerIdML_descriptor_,
      MsgSyncLoginServerIdML::default_instance_,
      MsgSyncLoginServerIdML_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgSyncLoginServerIdML),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncLoginServerIdML, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncLoginServerIdML, _is_default_instance_));
  MsgWorldRegAtMasterWM_descriptor_ = file->message_type(7);
  static const int MsgWorldRegAtMasterWM_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRegAtMasterWM, server_uid_),
  };
  MsgWorldRegAtMasterWM_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgWorldRegAtMasterWM_descriptor_,
      MsgWorldRegAtMasterWM::default_instance_,
      MsgWorldRegAtMasterWM_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgWorldRegAtMasterWM),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRegAtMasterWM, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRegAtMasterWM, _is_default_instance_));
  MsgWorldRegAtMasterAckMW_descriptor_ = file->message_type(8);
  static const int MsgWorldRegAtMasterAckMW_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRegAtMasterAckMW, result_),
  };
  MsgWorldRegAtMasterAckMW_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgWorldRegAtMasterAckMW_descriptor_,
      MsgWorldRegAtMasterAckMW::default_instance_,
      MsgWorldRegAtMasterAckMW_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgWorldRegAtMasterAckMW),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRegAtMasterAckMW, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRegAtMasterAckMW, _is_default_instance_));
  MsgReqEnterServerLS_descriptor_ = file->message_type(9);
  static const int MsgReqEnterServerLS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerLS, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerLS, account_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerLS, server_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerLS, login_serverid_),
  };
  MsgReqEnterServerLS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqEnterServerLS_descriptor_,
      MsgReqEnterServerLS::default_instance_,
      MsgReqEnterServerLS_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgReqEnterServerLS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerLS, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerLS, _is_default_instance_));
  MsgReqEnterServerResultSL_descriptor_ = file->message_type(10);
  static const int MsgReqEnterServerResultSL_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerResultSL, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerResultSL, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerResultSL, gate_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerResultSL, gate_port_),
  };
  MsgReqEnterServerResultSL_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqEnterServerResultSL_descriptor_,
      MsgReqEnterServerResultSL::default_instance_,
      MsgReqEnterServerResultSL_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgReqEnterServerResultSL),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerResultSL, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqEnterServerResultSL, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_5fserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgRegisterSW_descriptor_, &MsgRegisterSW::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgRegisterWS_descriptor_, &MsgRegisterWS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgServerInfoWS_descriptor_, &MsgServerInfoWS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgServerInfoWS_ServerInfo_descriptor_, &MsgServerInfoWS_ServerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgLogin2NodeGN_descriptor_, &MsgLogin2NodeGN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqServerListLM_descriptor_, &MsgReqServerListLM::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgServerListML_descriptor_, &MsgServerListML::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSyncLoginServerIdML_descriptor_, &MsgSyncLoginServerIdML::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgWorldRegAtMasterWM_descriptor_, &MsgWorldRegAtMasterWM::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgWorldRegAtMasterAckMW_descriptor_, &MsgWorldRegAtMasterAckMW::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqEnterServerLS_descriptor_, &MsgReqEnterServerLS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqEnterServerResultSL_descriptor_, &MsgReqEnterServerResultSL::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_5fserver_2eproto() {
  delete MsgRegisterSW::default_instance_;
  delete MsgRegisterSW_reflection_;
  delete MsgRegisterWS::default_instance_;
  delete MsgRegisterWS_reflection_;
  delete MsgServerInfoWS::default_instance_;
  delete MsgServerInfoWS_reflection_;
  delete MsgServerInfoWS_ServerInfo::default_instance_;
  delete MsgServerInfoWS_ServerInfo_reflection_;
  delete MsgLogin2NodeGN::default_instance_;
  delete MsgLogin2NodeGN_reflection_;
  delete MsgReqServerListLM::default_instance_;
  delete MsgReqServerListLM_reflection_;
  delete MsgServerListML::default_instance_;
  delete MsgServerListML_reflection_;
  delete MsgSyncLoginServerIdML::default_instance_;
  delete MsgSyncLoginServerIdML_reflection_;
  delete MsgWorldRegAtMasterWM::default_instance_;
  delete MsgWorldRegAtMasterWM_reflection_;
  delete MsgWorldRegAtMasterAckMW::default_instance_;
  delete MsgWorldRegAtMasterAckMW_reflection_;
  delete MsgReqEnterServerLS::default_instance_;
  delete MsgReqEnterServerLS_reflection_;
  delete MsgReqEnterServerResultSL::default_instance_;
  delete MsgReqEnterServerResultSL_reflection_;
}

void protobuf_AddDesc_server_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_server_5fserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb_base::protobuf_AddDesc_base_5ftype_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023server_server.proto\022\tpacket_ss\032\017base_t"
    "ype.proto\"J\n\rMsgRegisterSW\022\021\n\tpeer_type\030"
    "\001 \001(\005\022\021\n\tlisten_ip\030\002 \001(\t\022\023\n\013listen_port\030"
    "\003 \001(\005\"\"\n\rMsgRegisterWS\022\021\n\tserver_id\030\001 \001("
    "\005\"\251\001\n\017MsgServerInfoWS\022:\n\013server_info\030\001 \003"
    "(\0132%.packet_ss.MsgServerInfoWS.ServerInf"
    "o\032Z\n\nServerInfo\022\021\n\tpeer_type\030\001 \001(\005\022\021\n\tse"
    "rver_id\030\002 \001(\005\022\021\n\tlisten_ip\030\003 \001(\t\022\023\n\013list"
    "en_port\030\004 \001(\005\"7\n\017MsgLogin2NodeGN\022\021\n\tpeer"
    "_type\030\001 \001(\005\022\021\n\tserver_id\030\002 \001(\005\"*\n\022MsgReq"
    "ServerListLM\022\024\n\014account_name\030\001 \001(\t\"|\n\017Ms"
    "gServerListML\022\016\n\006result\030\001 \001(\005\022\'\n\007servers"
    "\030\002 \003(\0132\026.pb_base.ServerProfile\0220\n\tpost_b"
    "ack\030\003 \001(\0132\035.packet_ss.MsgReqServerListLM"
    "\"+\n\026MsgSyncLoginServerIdML\022\021\n\tserver_id\030"
    "\001 \001(\005\"+\n\025MsgWorldRegAtMasterWM\022\022\n\nserver"
    "_uid\030\001 \001(\005\"*\n\030MsgWorldRegAtMasterAckMW\022\016"
    "\n\006result\030\001 \001(\005\"n\n\023MsgReqEnterServerLS\022\024\n"
    "\014account_name\030\001 \001(\t\022\025\n\raccount_token\030\002 \001"
    "(\t\022\022\n\nserver_uid\030\003 \001(\005\022\026\n\016login_serverid"
    "\030\004 \001(\005\"e\n\031MsgReqEnterServerResultSL\022\016\n\006r"
    "esult\030\001 \001(\005\022\024\n\014account_name\030\002 \001(\t\022\017\n\007gat"
    "e_ip\030\003 \001(\t\022\021\n\tgate_port\030\004 \001(\005b\006proto3", 917);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_server.proto", &protobuf_RegisterTypes);
  MsgRegisterSW::default_instance_ = new MsgRegisterSW();
  MsgRegisterWS::default_instance_ = new MsgRegisterWS();
  MsgServerInfoWS::default_instance_ = new MsgServerInfoWS();
  MsgServerInfoWS_ServerInfo::default_instance_ = new MsgServerInfoWS_ServerInfo();
  MsgLogin2NodeGN::default_instance_ = new MsgLogin2NodeGN();
  MsgReqServerListLM::default_instance_ = new MsgReqServerListLM();
  MsgServerListML::default_instance_ = new MsgServerListML();
  MsgSyncLoginServerIdML::default_instance_ = new MsgSyncLoginServerIdML();
  MsgWorldRegAtMasterWM::default_instance_ = new MsgWorldRegAtMasterWM();
  MsgWorldRegAtMasterAckMW::default_instance_ = new MsgWorldRegAtMasterAckMW();
  MsgReqEnterServerLS::default_instance_ = new MsgReqEnterServerLS();
  MsgReqEnterServerResultSL::default_instance_ = new MsgReqEnterServerResultSL();
  MsgRegisterSW::default_instance_->InitAsDefaultInstance();
  MsgRegisterWS::default_instance_->InitAsDefaultInstance();
  MsgServerInfoWS::default_instance_->InitAsDefaultInstance();
  MsgServerInfoWS_ServerInfo::default_instance_->InitAsDefaultInstance();
  MsgLogin2NodeGN::default_instance_->InitAsDefaultInstance();
  MsgReqServerListLM::default_instance_->InitAsDefaultInstance();
  MsgServerListML::default_instance_->InitAsDefaultInstance();
  MsgSyncLoginServerIdML::default_instance_->InitAsDefaultInstance();
  MsgWorldRegAtMasterWM::default_instance_->InitAsDefaultInstance();
  MsgWorldRegAtMasterAckMW::default_instance_->InitAsDefaultInstance();
  MsgReqEnterServerLS::default_instance_->InitAsDefaultInstance();
  MsgReqEnterServerResultSL::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_5fserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_5fserver_2eproto {
  StaticDescriptorInitializer_server_5fserver_2eproto() {
    protobuf_AddDesc_server_5fserver_2eproto();
  }
} static_descriptor_initializer_server_5fserver_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRegisterSW::kPeerTypeFieldNumber;
const int MsgRegisterSW::kListenIpFieldNumber;
const int MsgRegisterSW::kListenPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRegisterSW::MsgRegisterSW()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgRegisterSW)
}

void MsgRegisterSW::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgRegisterSW::MsgRegisterSW(const MsgRegisterSW& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgRegisterSW)
}

void MsgRegisterSW::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_type_ = 0;
  listen_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port_ = 0;
}

MsgRegisterSW::~MsgRegisterSW() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgRegisterSW)
  SharedDtor();
}

void MsgRegisterSW::SharedDtor() {
  listen_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgRegisterSW::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRegisterSW::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRegisterSW_descriptor_;
}

const MsgRegisterSW& MsgRegisterSW::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgRegisterSW* MsgRegisterSW::default_instance_ = NULL;

MsgRegisterSW* MsgRegisterSW::New(::google::protobuf::Arena* arena) const {
  MsgRegisterSW* n = new MsgRegisterSW;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRegisterSW::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgRegisterSW)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgRegisterSW, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgRegisterSW*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(peer_type_, listen_port_);
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MsgRegisterSW::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgRegisterSW)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peer_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peer_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_listen_ip;
        break;
      }

      // optional string listen_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_listen_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen_ip().data(), this->listen_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgRegisterSW.listen_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_listen_port;
        break;
      }

      // optional int32 listen_port = 3;
      case 3: {
        if (tag == 24) {
         parse_listen_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listen_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgRegisterSW)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgRegisterSW)
  return false;
#undef DO_
}

void MsgRegisterSW::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgRegisterSW)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peer_type(), output);
  }

  // optional string listen_ip = 2;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgRegisterSW.listen_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->listen_ip(), output);
  }

  // optional int32 listen_port = 3;
  if (this->listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->listen_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgRegisterSW)
}

::google::protobuf::uint8* MsgRegisterSW::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgRegisterSW)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peer_type(), target);
  }

  // optional string listen_ip = 2;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgRegisterSW.listen_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->listen_ip(), target);
  }

  // optional int32 listen_port = 3;
  if (this->listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->listen_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgRegisterSW)
  return target;
}

int MsgRegisterSW::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgRegisterSW)
  int total_size = 0;

  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peer_type());
  }

  // optional string listen_ip = 2;
  if (this->listen_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen_ip());
  }

  // optional int32 listen_port = 3;
  if (this->listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listen_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRegisterSW::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgRegisterSW)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgRegisterSW* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRegisterSW>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgRegisterSW)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgRegisterSW)
    MergeFrom(*source);
  }
}

void MsgRegisterSW::MergeFrom(const MsgRegisterSW& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgRegisterSW)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.peer_type() != 0) {
    set_peer_type(from.peer_type());
  }
  if (from.listen_ip().size() > 0) {

    listen_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_ip_);
  }
  if (from.listen_port() != 0) {
    set_listen_port(from.listen_port());
  }
}

void MsgRegisterSW::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgRegisterSW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRegisterSW::CopyFrom(const MsgRegisterSW& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgRegisterSW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterSW::IsInitialized() const {

  return true;
}

void MsgRegisterSW::Swap(MsgRegisterSW* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRegisterSW::InternalSwap(MsgRegisterSW* other) {
  std::swap(peer_type_, other->peer_type_);
  listen_ip_.Swap(&other->listen_ip_);
  std::swap(listen_port_, other->listen_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRegisterSW::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRegisterSW_descriptor_;
  metadata.reflection = MsgRegisterSW_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRegisterSW

// optional int32 peer_type = 1;
void MsgRegisterSW::clear_peer_type() {
  peer_type_ = 0;
}
 ::google::protobuf::int32 MsgRegisterSW::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.peer_type)
  return peer_type_;
}
 void MsgRegisterSW::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.peer_type)
}

// optional string listen_ip = 2;
void MsgRegisterSW::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgRegisterSW::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRegisterSW::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_ip)
}
 void MsgRegisterSW::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgRegisterSW.listen_ip)
}
 void MsgRegisterSW::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgRegisterSW.listen_ip)
}
 ::std::string* MsgRegisterSW::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgRegisterSW::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgRegisterSW.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRegisterSW::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgRegisterSW.listen_ip)
}

// optional int32 listen_port = 3;
void MsgRegisterSW::clear_listen_port() {
  listen_port_ = 0;
}
 ::google::protobuf::int32 MsgRegisterSW::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_port)
  return listen_port_;
}
 void MsgRegisterSW::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRegisterWS::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRegisterWS::MsgRegisterWS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgRegisterWS)
}

void MsgRegisterWS::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgRegisterWS::MsgRegisterWS(const MsgRegisterWS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgRegisterWS)
}

void MsgRegisterWS::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  server_id_ = 0;
}

MsgRegisterWS::~MsgRegisterWS() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgRegisterWS)
  SharedDtor();
}

void MsgRegisterWS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgRegisterWS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRegisterWS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRegisterWS_descriptor_;
}

const MsgRegisterWS& MsgRegisterWS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgRegisterWS* MsgRegisterWS::default_instance_ = NULL;

MsgRegisterWS* MsgRegisterWS::New(::google::protobuf::Arena* arena) const {
  MsgRegisterWS* n = new MsgRegisterWS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRegisterWS::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgRegisterWS)
  server_id_ = 0;
}

bool MsgRegisterWS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgRegisterWS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgRegisterWS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgRegisterWS)
  return false;
#undef DO_
}

void MsgRegisterWS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgRegisterWS)
  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgRegisterWS)
}

::google::protobuf::uint8* MsgRegisterWS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgRegisterWS)
  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgRegisterWS)
  return target;
}

int MsgRegisterWS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgRegisterWS)
  int total_size = 0;

  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRegisterWS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgRegisterWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgRegisterWS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRegisterWS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgRegisterWS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgRegisterWS)
    MergeFrom(*source);
  }
}

void MsgRegisterWS::MergeFrom(const MsgRegisterWS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgRegisterWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void MsgRegisterWS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgRegisterWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRegisterWS::CopyFrom(const MsgRegisterWS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgRegisterWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterWS::IsInitialized() const {

  return true;
}

void MsgRegisterWS::Swap(MsgRegisterWS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRegisterWS::InternalSwap(MsgRegisterWS* other) {
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRegisterWS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRegisterWS_descriptor_;
  metadata.reflection = MsgRegisterWS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRegisterWS

// optional int32 server_id = 1;
void MsgRegisterWS::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgRegisterWS::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterWS.server_id)
  return server_id_;
}
 void MsgRegisterWS::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterWS.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgServerInfoWS_ServerInfo::kPeerTypeFieldNumber;
const int MsgServerInfoWS_ServerInfo::kServerIdFieldNumber;
const int MsgServerInfoWS_ServerInfo::kListenIpFieldNumber;
const int MsgServerInfoWS_ServerInfo::kListenPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgServerInfoWS_ServerInfo::MsgServerInfoWS_ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgServerInfoWS.ServerInfo)
}

void MsgServerInfoWS_ServerInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgServerInfoWS_ServerInfo::MsgServerInfoWS_ServerInfo(const MsgServerInfoWS_ServerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgServerInfoWS.ServerInfo)
}

void MsgServerInfoWS_ServerInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_type_ = 0;
  server_id_ = 0;
  listen_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port_ = 0;
}

MsgServerInfoWS_ServerInfo::~MsgServerInfoWS_ServerInfo() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgServerInfoWS.ServerInfo)
  SharedDtor();
}

void MsgServerInfoWS_ServerInfo::SharedDtor() {
  listen_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgServerInfoWS_ServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgServerInfoWS_ServerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgServerInfoWS_ServerInfo_descriptor_;
}

const MsgServerInfoWS_ServerInfo& MsgServerInfoWS_ServerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgServerInfoWS_ServerInfo* MsgServerInfoWS_ServerInfo::default_instance_ = NULL;

MsgServerInfoWS_ServerInfo* MsgServerInfoWS_ServerInfo::New(::google::protobuf::Arena* arena) const {
  MsgServerInfoWS_ServerInfo* n = new MsgServerInfoWS_ServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgServerInfoWS_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgServerInfoWS.ServerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgServerInfoWS_ServerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgServerInfoWS_ServerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(peer_type_, server_id_);
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool MsgServerInfoWS_ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgServerInfoWS.ServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peer_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peer_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional int32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_listen_ip;
        break;
      }

      // optional string listen_ip = 3;
      case 3: {
        if (tag == 26) {
         parse_listen_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen_ip().data(), this->listen_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgServerInfoWS.ServerInfo.listen_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_listen_port;
        break;
      }

      // optional int32 listen_port = 4;
      case 4: {
        if (tag == 32) {
         parse_listen_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listen_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgServerInfoWS.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgServerInfoWS.ServerInfo)
  return false;
#undef DO_
}

void MsgServerInfoWS_ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgServerInfoWS.ServerInfo)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peer_type(), output);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_id(), output);
  }

  // optional string listen_ip = 3;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgServerInfoWS.ServerInfo.listen_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->listen_ip(), output);
  }

  // optional int32 listen_port = 4;
  if (this->listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->listen_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgServerInfoWS.ServerInfo)
}

::google::protobuf::uint8* MsgServerInfoWS_ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgServerInfoWS.ServerInfo)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peer_type(), target);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_id(), target);
  }

  // optional string listen_ip = 3;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgServerInfoWS.ServerInfo.listen_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->listen_ip(), target);
  }

  // optional int32 listen_port = 4;
  if (this->listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->listen_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgServerInfoWS.ServerInfo)
  return target;
}

int MsgServerInfoWS_ServerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgServerInfoWS.ServerInfo)
  int total_size = 0;

  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peer_type());
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  // optional string listen_ip = 3;
  if (this->listen_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen_ip());
  }

  // optional int32 listen_port = 4;
  if (this->listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listen_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgServerInfoWS_ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgServerInfoWS_ServerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgServerInfoWS_ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgServerInfoWS.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgServerInfoWS.ServerInfo)
    MergeFrom(*source);
  }
}

void MsgServerInfoWS_ServerInfo::MergeFrom(const MsgServerInfoWS_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.peer_type() != 0) {
    set_peer_type(from.peer_type());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
  if (from.listen_ip().size() > 0) {

    listen_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_ip_);
  }
  if (from.listen_port() != 0) {
    set_listen_port(from.listen_port());
  }
}

void MsgServerInfoWS_ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgServerInfoWS_ServerInfo::CopyFrom(const MsgServerInfoWS_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgServerInfoWS_ServerInfo::IsInitialized() const {

  return true;
}

void MsgServerInfoWS_ServerInfo::Swap(MsgServerInfoWS_ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgServerInfoWS_ServerInfo::InternalSwap(MsgServerInfoWS_ServerInfo* other) {
  std::swap(peer_type_, other->peer_type_);
  std::swap(server_id_, other->server_id_);
  listen_ip_.Swap(&other->listen_ip_);
  std::swap(listen_port_, other->listen_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgServerInfoWS_ServerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgServerInfoWS_ServerInfo_descriptor_;
  metadata.reflection = MsgServerInfoWS_ServerInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgServerInfoWS::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgServerInfoWS::MsgServerInfoWS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgServerInfoWS)
}

void MsgServerInfoWS::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgServerInfoWS::MsgServerInfoWS(const MsgServerInfoWS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgServerInfoWS)
}

void MsgServerInfoWS::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MsgServerInfoWS::~MsgServerInfoWS() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgServerInfoWS)
  SharedDtor();
}

void MsgServerInfoWS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgServerInfoWS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgServerInfoWS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgServerInfoWS_descriptor_;
}

const MsgServerInfoWS& MsgServerInfoWS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgServerInfoWS* MsgServerInfoWS::default_instance_ = NULL;

MsgServerInfoWS* MsgServerInfoWS::New(::google::protobuf::Arena* arena) const {
  MsgServerInfoWS* n = new MsgServerInfoWS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgServerInfoWS::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgServerInfoWS)
  server_info_.Clear();
}

bool MsgServerInfoWS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgServerInfoWS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_server_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_server_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgServerInfoWS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgServerInfoWS)
  return false;
#undef DO_
}

void MsgServerInfoWS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgServerInfoWS)
  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  for (unsigned int i = 0, n = this->server_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->server_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgServerInfoWS)
}

::google::protobuf::uint8* MsgServerInfoWS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgServerInfoWS)
  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  for (unsigned int i = 0, n = this->server_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->server_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgServerInfoWS)
  return target;
}

int MsgServerInfoWS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgServerInfoWS)
  int total_size = 0;

  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  total_size += 1 * this->server_info_size();
  for (int i = 0; i < this->server_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_info(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgServerInfoWS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgServerInfoWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgServerInfoWS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgServerInfoWS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgServerInfoWS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgServerInfoWS)
    MergeFrom(*source);
  }
}

void MsgServerInfoWS::MergeFrom(const MsgServerInfoWS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgServerInfoWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  server_info_.MergeFrom(from.server_info_);
}

void MsgServerInfoWS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgServerInfoWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgServerInfoWS::CopyFrom(const MsgServerInfoWS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgServerInfoWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgServerInfoWS::IsInitialized() const {

  return true;
}

void MsgServerInfoWS::Swap(MsgServerInfoWS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgServerInfoWS::InternalSwap(MsgServerInfoWS* other) {
  server_info_.UnsafeArenaSwap(&other->server_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgServerInfoWS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgServerInfoWS_descriptor_;
  metadata.reflection = MsgServerInfoWS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgServerInfoWS_ServerInfo

// optional int32 peer_type = 1;
void MsgServerInfoWS_ServerInfo::clear_peer_type() {
  peer_type_ = 0;
}
 ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
  return peer_type_;
}
 void MsgServerInfoWS_ServerInfo::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
}

// optional int32 server_id = 2;
void MsgServerInfoWS_ServerInfo::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
  return server_id_;
}
 void MsgServerInfoWS_ServerInfo::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
}

// optional string listen_ip = 3;
void MsgServerInfoWS_ServerInfo::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgServerInfoWS_ServerInfo::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgServerInfoWS_ServerInfo::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
 void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
 void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
 ::std::string* MsgServerInfoWS_ServerInfo::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgServerInfoWS_ServerInfo::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgServerInfoWS_ServerInfo::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}

// optional int32 listen_port = 4;
void MsgServerInfoWS_ServerInfo::clear_listen_port() {
  listen_port_ = 0;
}
 ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
  return listen_port_;
}
 void MsgServerInfoWS_ServerInfo::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
}

// -------------------------------------------------------------------

// MsgServerInfoWS

// repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
int MsgServerInfoWS::server_info_size() const {
  return server_info_.size();
}
void MsgServerInfoWS::clear_server_info() {
  server_info_.Clear();
}
const ::packet_ss::MsgServerInfoWS_ServerInfo& MsgServerInfoWS::server_info(int index) const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Get(index);
}
::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::mutable_server_info(int index) {
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Mutable(index);
}
::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::add_server_info() {
  // @@protoc_insertion_point(field_add:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >*
MsgServerInfoWS::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:packet_ss.MsgServerInfoWS.server_info)
  return &server_info_;
}
const ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >&
MsgServerInfoWS::server_info() const {
  // @@protoc_insertion_point(field_list:packet_ss.MsgServerInfoWS.server_info)
  return server_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLogin2NodeGN::kPeerTypeFieldNumber;
const int MsgLogin2NodeGN::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLogin2NodeGN::MsgLogin2NodeGN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgLogin2NodeGN)
}

void MsgLogin2NodeGN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgLogin2NodeGN::MsgLogin2NodeGN(const MsgLogin2NodeGN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgLogin2NodeGN)
}

void MsgLogin2NodeGN::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_type_ = 0;
  server_id_ = 0;
}

MsgLogin2NodeGN::~MsgLogin2NodeGN() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgLogin2NodeGN)
  SharedDtor();
}

void MsgLogin2NodeGN::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgLogin2NodeGN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLogin2NodeGN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogin2NodeGN_descriptor_;
}

const MsgLogin2NodeGN& MsgLogin2NodeGN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgLogin2NodeGN* MsgLogin2NodeGN::default_instance_ = NULL;

MsgLogin2NodeGN* MsgLogin2NodeGN::New(::google::protobuf::Arena* arena) const {
  MsgLogin2NodeGN* n = new MsgLogin2NodeGN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLogin2NodeGN::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgLogin2NodeGN)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgLogin2NodeGN, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgLogin2NodeGN*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(peer_type_, server_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool MsgLogin2NodeGN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgLogin2NodeGN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peer_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peer_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional int32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgLogin2NodeGN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgLogin2NodeGN)
  return false;
#undef DO_
}

void MsgLogin2NodeGN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgLogin2NodeGN)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peer_type(), output);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgLogin2NodeGN)
}

::google::protobuf::uint8* MsgLogin2NodeGN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgLogin2NodeGN)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peer_type(), target);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgLogin2NodeGN)
  return target;
}

int MsgLogin2NodeGN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgLogin2NodeGN)
  int total_size = 0;

  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peer_type());
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLogin2NodeGN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgLogin2NodeGN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgLogin2NodeGN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLogin2NodeGN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgLogin2NodeGN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgLogin2NodeGN)
    MergeFrom(*source);
  }
}

void MsgLogin2NodeGN::MergeFrom(const MsgLogin2NodeGN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgLogin2NodeGN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.peer_type() != 0) {
    set_peer_type(from.peer_type());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void MsgLogin2NodeGN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgLogin2NodeGN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogin2NodeGN::CopyFrom(const MsgLogin2NodeGN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgLogin2NodeGN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogin2NodeGN::IsInitialized() const {

  return true;
}

void MsgLogin2NodeGN::Swap(MsgLogin2NodeGN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLogin2NodeGN::InternalSwap(MsgLogin2NodeGN* other) {
  std::swap(peer_type_, other->peer_type_);
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLogin2NodeGN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogin2NodeGN_descriptor_;
  metadata.reflection = MsgLogin2NodeGN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLogin2NodeGN

// optional int32 peer_type = 1;
void MsgLogin2NodeGN::clear_peer_type() {
  peer_type_ = 0;
}
 ::google::protobuf::int32 MsgLogin2NodeGN::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgLogin2NodeGN.peer_type)
  return peer_type_;
}
 void MsgLogin2NodeGN::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgLogin2NodeGN.peer_type)
}

// optional int32 server_id = 2;
void MsgLogin2NodeGN::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgLogin2NodeGN::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgLogin2NodeGN.server_id)
  return server_id_;
}
 void MsgLogin2NodeGN::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgLogin2NodeGN.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReqServerListLM::kAccountNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReqServerListLM::MsgReqServerListLM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgReqServerListLM)
}

void MsgReqServerListLM::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgReqServerListLM::MsgReqServerListLM(const MsgReqServerListLM& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgReqServerListLM)
}

void MsgReqServerListLM::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgReqServerListLM::~MsgReqServerListLM() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgReqServerListLM)
  SharedDtor();
}

void MsgReqServerListLM::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgReqServerListLM::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqServerListLM::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqServerListLM_descriptor_;
}

const MsgReqServerListLM& MsgReqServerListLM::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgReqServerListLM* MsgReqServerListLM::default_instance_ = NULL;

MsgReqServerListLM* MsgReqServerListLM::New(::google::protobuf::Arena* arena) const {
  MsgReqServerListLM* n = new MsgReqServerListLM;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqServerListLM::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgReqServerListLM)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgReqServerListLM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgReqServerListLM)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgReqServerListLM.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgReqServerListLM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgReqServerListLM)
  return false;
#undef DO_
}

void MsgReqServerListLM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgReqServerListLM)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqServerListLM.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgReqServerListLM)
}

::google::protobuf::uint8* MsgReqServerListLM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgReqServerListLM)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqServerListLM.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgReqServerListLM)
  return target;
}

int MsgReqServerListLM::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgReqServerListLM)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqServerListLM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgReqServerListLM)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgReqServerListLM* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgReqServerListLM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgReqServerListLM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgReqServerListLM)
    MergeFrom(*source);
  }
}

void MsgReqServerListLM::MergeFrom(const MsgReqServerListLM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgReqServerListLM)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
}

void MsgReqServerListLM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgReqServerListLM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqServerListLM::CopyFrom(const MsgReqServerListLM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgReqServerListLM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqServerListLM::IsInitialized() const {

  return true;
}

void MsgReqServerListLM::Swap(MsgReqServerListLM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqServerListLM::InternalSwap(MsgReqServerListLM* other) {
  account_name_.Swap(&other->account_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqServerListLM::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqServerListLM_descriptor_;
  metadata.reflection = MsgReqServerListLM_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqServerListLM

// optional string account_name = 1;
void MsgReqServerListLM::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqServerListLM::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqServerListLM.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqServerListLM::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqServerListLM.account_name)
}
 void MsgReqServerListLM::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqServerListLM.account_name)
}
 void MsgReqServerListLM::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqServerListLM.account_name)
}
 ::std::string* MsgReqServerListLM::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqServerListLM.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqServerListLM::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqServerListLM.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqServerListLM::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqServerListLM.account_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgServerListML::kResultFieldNumber;
const int MsgServerListML::kServersFieldNumber;
const int MsgServerListML::kPostBackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgServerListML::MsgServerListML()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgServerListML)
}

void MsgServerListML::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  post_back_ = const_cast< ::packet_ss::MsgReqServerListLM*>(&::packet_ss::MsgReqServerListLM::default_instance());
}

MsgServerListML::MsgServerListML(const MsgServerListML& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgServerListML)
}

void MsgServerListML::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
  post_back_ = NULL;
}

MsgServerListML::~MsgServerListML() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgServerListML)
  SharedDtor();
}

void MsgServerListML::SharedDtor() {
  if (this != default_instance_) {
    delete post_back_;
  }
}

void MsgServerListML::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgServerListML::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgServerListML_descriptor_;
}

const MsgServerListML& MsgServerListML::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgServerListML* MsgServerListML::default_instance_ = NULL;

MsgServerListML* MsgServerListML::New(::google::protobuf::Arena* arena) const {
  MsgServerListML* n = new MsgServerListML;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgServerListML::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgServerListML)
  result_ = 0;
  if (GetArenaNoVirtual() == NULL && post_back_ != NULL) delete post_back_;
  post_back_ = NULL;
  servers_.Clear();
}

bool MsgServerListML::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgServerListML)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_servers;
        break;
      }

      // repeated .pb_base.ServerProfile servers = 2;
      case 2: {
        if (tag == 18) {
         parse_servers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_servers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_servers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_servers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_post_back;
        break;
      }

      // optional .packet_ss.MsgReqServerListLM post_back = 3;
      case 3: {
        if (tag == 26) {
         parse_post_back:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_post_back()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgServerListML)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgServerListML)
  return false;
#undef DO_
}

void MsgServerListML::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgServerListML)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .pb_base.ServerProfile servers = 2;
  for (unsigned int i = 0, n = this->servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->servers(i), output);
  }

  // optional .packet_ss.MsgReqServerListLM post_back = 3;
  if (this->has_post_back()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->post_back_, output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgServerListML)
}

::google::protobuf::uint8* MsgServerListML::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgServerListML)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .pb_base.ServerProfile servers = 2;
  for (unsigned int i = 0, n = this->servers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->servers(i), false, target);
  }

  // optional .packet_ss.MsgReqServerListLM post_back = 3;
  if (this->has_post_back()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->post_back_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgServerListML)
  return target;
}

int MsgServerListML::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgServerListML)
  int total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional .packet_ss.MsgReqServerListLM post_back = 3;
  if (this->has_post_back()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->post_back_);
  }

  // repeated .pb_base.ServerProfile servers = 2;
  total_size += 1 * this->servers_size();
  for (int i = 0; i < this->servers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->servers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgServerListML::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgServerListML)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgServerListML* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgServerListML>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgServerListML)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgServerListML)
    MergeFrom(*source);
  }
}

void MsgServerListML::MergeFrom(const MsgServerListML& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgServerListML)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  servers_.MergeFrom(from.servers_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_post_back()) {
    mutable_post_back()->::packet_ss::MsgReqServerListLM::MergeFrom(from.post_back());
  }
}

void MsgServerListML::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgServerListML)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgServerListML::CopyFrom(const MsgServerListML& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgServerListML)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgServerListML::IsInitialized() const {

  return true;
}

void MsgServerListML::Swap(MsgServerListML* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgServerListML::InternalSwap(MsgServerListML* other) {
  std::swap(result_, other->result_);
  servers_.UnsafeArenaSwap(&other->servers_);
  std::swap(post_back_, other->post_back_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgServerListML::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgServerListML_descriptor_;
  metadata.reflection = MsgServerListML_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgServerListML

// optional int32 result = 1;
void MsgServerListML::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 MsgServerListML::result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerListML.result)
  return result_;
}
 void MsgServerListML::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerListML.result)
}

// repeated .pb_base.ServerProfile servers = 2;
int MsgServerListML::servers_size() const {
  return servers_.size();
}
void MsgServerListML::clear_servers() {
  servers_.Clear();
}
const ::pb_base::ServerProfile& MsgServerListML::servers(int index) const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerListML.servers)
  return servers_.Get(index);
}
::pb_base::ServerProfile* MsgServerListML::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerListML.servers)
  return servers_.Mutable(index);
}
::pb_base::ServerProfile* MsgServerListML::add_servers() {
  // @@protoc_insertion_point(field_add:packet_ss.MsgServerListML.servers)
  return servers_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile >*
MsgServerListML::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:packet_ss.MsgServerListML.servers)
  return &servers_;
}
const ::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile >&
MsgServerListML::servers() const {
  // @@protoc_insertion_point(field_list:packet_ss.MsgServerListML.servers)
  return servers_;
}

// optional .packet_ss.MsgReqServerListLM post_back = 3;
bool MsgServerListML::has_post_back() const {
  return !_is_default_instance_ && post_back_ != NULL;
}
void MsgServerListML::clear_post_back() {
  if (GetArenaNoVirtual() == NULL && post_back_ != NULL) delete post_back_;
  post_back_ = NULL;
}
const ::packet_ss::MsgReqServerListLM& MsgServerListML::post_back() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerListML.post_back)
  return post_back_ != NULL ? *post_back_ : *default_instance_->post_back_;
}
::packet_ss::MsgReqServerListLM* MsgServerListML::mutable_post_back() {
  
  if (post_back_ == NULL) {
    post_back_ = new ::packet_ss::MsgReqServerListLM;
  }
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerListML.post_back)
  return post_back_;
}
::packet_ss::MsgReqServerListLM* MsgServerListML::release_post_back() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgServerListML.post_back)
  
  ::packet_ss::MsgReqServerListLM* temp = post_back_;
  post_back_ = NULL;
  return temp;
}
void MsgServerListML::set_allocated_post_back(::packet_ss::MsgReqServerListLM* post_back) {
  delete post_back_;
  post_back_ = post_back;
  if (post_back) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgServerListML.post_back)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSyncLoginServerIdML::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSyncLoginServerIdML::MsgSyncLoginServerIdML()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgSyncLoginServerIdML)
}

void MsgSyncLoginServerIdML::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgSyncLoginServerIdML::MsgSyncLoginServerIdML(const MsgSyncLoginServerIdML& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgSyncLoginServerIdML)
}

void MsgSyncLoginServerIdML::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  server_id_ = 0;
}

MsgSyncLoginServerIdML::~MsgSyncLoginServerIdML() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgSyncLoginServerIdML)
  SharedDtor();
}

void MsgSyncLoginServerIdML::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSyncLoginServerIdML::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncLoginServerIdML::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncLoginServerIdML_descriptor_;
}

const MsgSyncLoginServerIdML& MsgSyncLoginServerIdML::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgSyncLoginServerIdML* MsgSyncLoginServerIdML::default_instance_ = NULL;

MsgSyncLoginServerIdML* MsgSyncLoginServerIdML::New(::google::protobuf::Arena* arena) const {
  MsgSyncLoginServerIdML* n = new MsgSyncLoginServerIdML;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSyncLoginServerIdML::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgSyncLoginServerIdML)
  server_id_ = 0;
}

bool MsgSyncLoginServerIdML::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgSyncLoginServerIdML)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgSyncLoginServerIdML)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgSyncLoginServerIdML)
  return false;
#undef DO_
}

void MsgSyncLoginServerIdML::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgSyncLoginServerIdML)
  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgSyncLoginServerIdML)
}

::google::protobuf::uint8* MsgSyncLoginServerIdML::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgSyncLoginServerIdML)
  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgSyncLoginServerIdML)
  return target;
}

int MsgSyncLoginServerIdML::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgSyncLoginServerIdML)
  int total_size = 0;

  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncLoginServerIdML::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgSyncLoginServerIdML)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgSyncLoginServerIdML* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgSyncLoginServerIdML>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgSyncLoginServerIdML)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgSyncLoginServerIdML)
    MergeFrom(*source);
  }
}

void MsgSyncLoginServerIdML::MergeFrom(const MsgSyncLoginServerIdML& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgSyncLoginServerIdML)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void MsgSyncLoginServerIdML::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgSyncLoginServerIdML)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncLoginServerIdML::CopyFrom(const MsgSyncLoginServerIdML& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgSyncLoginServerIdML)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncLoginServerIdML::IsInitialized() const {

  return true;
}

void MsgSyncLoginServerIdML::Swap(MsgSyncLoginServerIdML* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSyncLoginServerIdML::InternalSwap(MsgSyncLoginServerIdML* other) {
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSyncLoginServerIdML::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncLoginServerIdML_descriptor_;
  metadata.reflection = MsgSyncLoginServerIdML_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSyncLoginServerIdML

// optional int32 server_id = 1;
void MsgSyncLoginServerIdML::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgSyncLoginServerIdML::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgSyncLoginServerIdML.server_id)
  return server_id_;
}
 void MsgSyncLoginServerIdML::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgSyncLoginServerIdML.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgWorldRegAtMasterWM::kServerUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgWorldRegAtMasterWM::MsgWorldRegAtMasterWM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgWorldRegAtMasterWM)
}

void MsgWorldRegAtMasterWM::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgWorldRegAtMasterWM::MsgWorldRegAtMasterWM(const MsgWorldRegAtMasterWM& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgWorldRegAtMasterWM)
}

void MsgWorldRegAtMasterWM::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  server_uid_ = 0;
}

MsgWorldRegAtMasterWM::~MsgWorldRegAtMasterWM() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgWorldRegAtMasterWM)
  SharedDtor();
}

void MsgWorldRegAtMasterWM::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgWorldRegAtMasterWM::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgWorldRegAtMasterWM::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgWorldRegAtMasterWM_descriptor_;
}

const MsgWorldRegAtMasterWM& MsgWorldRegAtMasterWM::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgWorldRegAtMasterWM* MsgWorldRegAtMasterWM::default_instance_ = NULL;

MsgWorldRegAtMasterWM* MsgWorldRegAtMasterWM::New(::google::protobuf::Arena* arena) const {
  MsgWorldRegAtMasterWM* n = new MsgWorldRegAtMasterWM;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgWorldRegAtMasterWM::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgWorldRegAtMasterWM)
  server_uid_ = 0;
}

bool MsgWorldRegAtMasterWM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgWorldRegAtMasterWM)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 server_uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgWorldRegAtMasterWM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgWorldRegAtMasterWM)
  return false;
#undef DO_
}

void MsgWorldRegAtMasterWM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgWorldRegAtMasterWM)
  // optional int32 server_uid = 1;
  if (this->server_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgWorldRegAtMasterWM)
}

::google::protobuf::uint8* MsgWorldRegAtMasterWM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgWorldRegAtMasterWM)
  // optional int32 server_uid = 1;
  if (this->server_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgWorldRegAtMasterWM)
  return target;
}

int MsgWorldRegAtMasterWM::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgWorldRegAtMasterWM)
  int total_size = 0;

  // optional int32 server_uid = 1;
  if (this->server_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_uid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgWorldRegAtMasterWM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgWorldRegAtMasterWM)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgWorldRegAtMasterWM* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgWorldRegAtMasterWM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgWorldRegAtMasterWM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgWorldRegAtMasterWM)
    MergeFrom(*source);
  }
}

void MsgWorldRegAtMasterWM::MergeFrom(const MsgWorldRegAtMasterWM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgWorldRegAtMasterWM)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.server_uid() != 0) {
    set_server_uid(from.server_uid());
  }
}

void MsgWorldRegAtMasterWM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgWorldRegAtMasterWM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgWorldRegAtMasterWM::CopyFrom(const MsgWorldRegAtMasterWM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgWorldRegAtMasterWM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWorldRegAtMasterWM::IsInitialized() const {

  return true;
}

void MsgWorldRegAtMasterWM::Swap(MsgWorldRegAtMasterWM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgWorldRegAtMasterWM::InternalSwap(MsgWorldRegAtMasterWM* other) {
  std::swap(server_uid_, other->server_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgWorldRegAtMasterWM::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgWorldRegAtMasterWM_descriptor_;
  metadata.reflection = MsgWorldRegAtMasterWM_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgWorldRegAtMasterWM

// optional int32 server_uid = 1;
void MsgWorldRegAtMasterWM::clear_server_uid() {
  server_uid_ = 0;
}
 ::google::protobuf::int32 MsgWorldRegAtMasterWM::server_uid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgWorldRegAtMasterWM.server_uid)
  return server_uid_;
}
 void MsgWorldRegAtMasterWM::set_server_uid(::google::protobuf::int32 value) {
  
  server_uid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgWorldRegAtMasterWM.server_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgWorldRegAtMasterAckMW::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgWorldRegAtMasterAckMW::MsgWorldRegAtMasterAckMW()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgWorldRegAtMasterAckMW)
}

void MsgWorldRegAtMasterAckMW::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgWorldRegAtMasterAckMW::MsgWorldRegAtMasterAckMW(const MsgWorldRegAtMasterAckMW& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgWorldRegAtMasterAckMW)
}

void MsgWorldRegAtMasterAckMW::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
}

MsgWorldRegAtMasterAckMW::~MsgWorldRegAtMasterAckMW() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgWorldRegAtMasterAckMW)
  SharedDtor();
}

void MsgWorldRegAtMasterAckMW::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgWorldRegAtMasterAckMW::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgWorldRegAtMasterAckMW::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgWorldRegAtMasterAckMW_descriptor_;
}

const MsgWorldRegAtMasterAckMW& MsgWorldRegAtMasterAckMW::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgWorldRegAtMasterAckMW* MsgWorldRegAtMasterAckMW::default_instance_ = NULL;

MsgWorldRegAtMasterAckMW* MsgWorldRegAtMasterAckMW::New(::google::protobuf::Arena* arena) const {
  MsgWorldRegAtMasterAckMW* n = new MsgWorldRegAtMasterAckMW;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgWorldRegAtMasterAckMW::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgWorldRegAtMasterAckMW)
  result_ = 0;
}

bool MsgWorldRegAtMasterAckMW::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgWorldRegAtMasterAckMW)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgWorldRegAtMasterAckMW)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgWorldRegAtMasterAckMW)
  return false;
#undef DO_
}

void MsgWorldRegAtMasterAckMW::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgWorldRegAtMasterAckMW)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgWorldRegAtMasterAckMW)
}

::google::protobuf::uint8* MsgWorldRegAtMasterAckMW::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgWorldRegAtMasterAckMW)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgWorldRegAtMasterAckMW)
  return target;
}

int MsgWorldRegAtMasterAckMW::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgWorldRegAtMasterAckMW)
  int total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgWorldRegAtMasterAckMW::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgWorldRegAtMasterAckMW)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgWorldRegAtMasterAckMW* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgWorldRegAtMasterAckMW>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgWorldRegAtMasterAckMW)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgWorldRegAtMasterAckMW)
    MergeFrom(*source);
  }
}

void MsgWorldRegAtMasterAckMW::MergeFrom(const MsgWorldRegAtMasterAckMW& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgWorldRegAtMasterAckMW)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void MsgWorldRegAtMasterAckMW::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgWorldRegAtMasterAckMW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgWorldRegAtMasterAckMW::CopyFrom(const MsgWorldRegAtMasterAckMW& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgWorldRegAtMasterAckMW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWorldRegAtMasterAckMW::IsInitialized() const {

  return true;
}

void MsgWorldRegAtMasterAckMW::Swap(MsgWorldRegAtMasterAckMW* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgWorldRegAtMasterAckMW::InternalSwap(MsgWorldRegAtMasterAckMW* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgWorldRegAtMasterAckMW::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgWorldRegAtMasterAckMW_descriptor_;
  metadata.reflection = MsgWorldRegAtMasterAckMW_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgWorldRegAtMasterAckMW

// optional int32 result = 1;
void MsgWorldRegAtMasterAckMW::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 MsgWorldRegAtMasterAckMW::result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgWorldRegAtMasterAckMW.result)
  return result_;
}
 void MsgWorldRegAtMasterAckMW::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgWorldRegAtMasterAckMW.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReqEnterServerLS::kAccountNameFieldNumber;
const int MsgReqEnterServerLS::kAccountTokenFieldNumber;
const int MsgReqEnterServerLS::kServerUidFieldNumber;
const int MsgReqEnterServerLS::kLoginServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReqEnterServerLS::MsgReqEnterServerLS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgReqEnterServerLS)
}

void MsgReqEnterServerLS::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgReqEnterServerLS::MsgReqEnterServerLS(const MsgReqEnterServerLS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgReqEnterServerLS)
}

void MsgReqEnterServerLS::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_uid_ = 0;
  login_serverid_ = 0;
}

MsgReqEnterServerLS::~MsgReqEnterServerLS() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgReqEnterServerLS)
  SharedDtor();
}

void MsgReqEnterServerLS::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgReqEnterServerLS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqEnterServerLS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqEnterServerLS_descriptor_;
}

const MsgReqEnterServerLS& MsgReqEnterServerLS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgReqEnterServerLS* MsgReqEnterServerLS::default_instance_ = NULL;

MsgReqEnterServerLS* MsgReqEnterServerLS::New(::google::protobuf::Arena* arena) const {
  MsgReqEnterServerLS* n = new MsgReqEnterServerLS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqEnterServerLS::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgReqEnterServerLS)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgReqEnterServerLS, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgReqEnterServerLS*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(server_uid_, login_serverid_);
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MsgReqEnterServerLS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgReqEnterServerLS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgReqEnterServerLS.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account_token;
        break;
      }

      // optional string account_token = 2;
      case 2: {
        if (tag == 18) {
         parse_account_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_token().data(), this->account_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgReqEnterServerLS.account_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_uid;
        break;
      }

      // optional int32 server_uid = 3;
      case 3: {
        if (tag == 24) {
         parse_server_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_login_serverid;
        break;
      }

      // optional int32 login_serverid = 4;
      case 4: {
        if (tag == 32) {
         parse_login_serverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgReqEnterServerLS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgReqEnterServerLS)
  return false;
#undef DO_
}

void MsgReqEnterServerLS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgReqEnterServerLS)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerLS.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string account_token = 2;
  if (this->account_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_token().data(), this->account_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerLS.account_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_token(), output);
  }

  // optional int32 server_uid = 3;
  if (this->server_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->server_uid(), output);
  }

  // optional int32 login_serverid = 4;
  if (this->login_serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->login_serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgReqEnterServerLS)
}

::google::protobuf::uint8* MsgReqEnterServerLS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgReqEnterServerLS)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerLS.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string account_token = 2;
  if (this->account_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_token().data(), this->account_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerLS.account_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_token(), target);
  }

  // optional int32 server_uid = 3;
  if (this->server_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->server_uid(), target);
  }

  // optional int32 login_serverid = 4;
  if (this->login_serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->login_serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgReqEnterServerLS)
  return target;
}

int MsgReqEnterServerLS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgReqEnterServerLS)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string account_token = 2;
  if (this->account_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_token());
  }

  // optional int32 server_uid = 3;
  if (this->server_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_uid());
  }

  // optional int32 login_serverid = 4;
  if (this->login_serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->login_serverid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqEnterServerLS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgReqEnterServerLS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgReqEnterServerLS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgReqEnterServerLS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgReqEnterServerLS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgReqEnterServerLS)
    MergeFrom(*source);
  }
}

void MsgReqEnterServerLS::MergeFrom(const MsgReqEnterServerLS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgReqEnterServerLS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.account_token().size() > 0) {

    account_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_token_);
  }
  if (from.server_uid() != 0) {
    set_server_uid(from.server_uid());
  }
  if (from.login_serverid() != 0) {
    set_login_serverid(from.login_serverid());
  }
}

void MsgReqEnterServerLS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgReqEnterServerLS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqEnterServerLS::CopyFrom(const MsgReqEnterServerLS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgReqEnterServerLS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqEnterServerLS::IsInitialized() const {

  return true;
}

void MsgReqEnterServerLS::Swap(MsgReqEnterServerLS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqEnterServerLS::InternalSwap(MsgReqEnterServerLS* other) {
  account_name_.Swap(&other->account_name_);
  account_token_.Swap(&other->account_token_);
  std::swap(server_uid_, other->server_uid_);
  std::swap(login_serverid_, other->login_serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqEnterServerLS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqEnterServerLS_descriptor_;
  metadata.reflection = MsgReqEnterServerLS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqEnterServerLS

// optional string account_name = 1;
void MsgReqEnterServerLS::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqEnterServerLS::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerLS::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.account_name)
}
 void MsgReqEnterServerLS::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerLS.account_name)
}
 void MsgReqEnterServerLS::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerLS.account_name)
}
 ::std::string* MsgReqEnterServerLS::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerLS.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqEnterServerLS::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerLS.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerLS::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerLS.account_name)
}

// optional string account_token = 2;
void MsgReqEnterServerLS::clear_account_token() {
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqEnterServerLS::account_token() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.account_token)
  return account_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerLS::set_account_token(const ::std::string& value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.account_token)
}
 void MsgReqEnterServerLS::set_account_token(const char* value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerLS.account_token)
}
 void MsgReqEnterServerLS::set_account_token(const char* value, size_t size) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerLS.account_token)
}
 ::std::string* MsgReqEnterServerLS::mutable_account_token() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerLS.account_token)
  return account_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqEnterServerLS::release_account_token() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerLS.account_token)
  
  return account_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerLS::set_allocated_account_token(::std::string* account_token) {
  if (account_token != NULL) {
    
  } else {
    
  }
  account_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_token);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerLS.account_token)
}

// optional int32 server_uid = 3;
void MsgReqEnterServerLS::clear_server_uid() {
  server_uid_ = 0;
}
 ::google::protobuf::int32 MsgReqEnterServerLS::server_uid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.server_uid)
  return server_uid_;
}
 void MsgReqEnterServerLS::set_server_uid(::google::protobuf::int32 value) {
  
  server_uid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.server_uid)
}

// optional int32 login_serverid = 4;
void MsgReqEnterServerLS::clear_login_serverid() {
  login_serverid_ = 0;
}
 ::google::protobuf::int32 MsgReqEnterServerLS::login_serverid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.login_serverid)
  return login_serverid_;
}
 void MsgReqEnterServerLS::set_login_serverid(::google::protobuf::int32 value) {
  
  login_serverid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.login_serverid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReqEnterServerResultSL::kResultFieldNumber;
const int MsgReqEnterServerResultSL::kAccountNameFieldNumber;
const int MsgReqEnterServerResultSL::kGateIpFieldNumber;
const int MsgReqEnterServerResultSL::kGatePortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReqEnterServerResultSL::MsgReqEnterServerResultSL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgReqEnterServerResultSL)
}

void MsgReqEnterServerResultSL::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgReqEnterServerResultSL::MsgReqEnterServerResultSL(const MsgReqEnterServerResultSL& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgReqEnterServerResultSL)
}

void MsgReqEnterServerResultSL::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_port_ = 0;
}

MsgReqEnterServerResultSL::~MsgReqEnterServerResultSL() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgReqEnterServerResultSL)
  SharedDtor();
}

void MsgReqEnterServerResultSL::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgReqEnterServerResultSL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqEnterServerResultSL::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqEnterServerResultSL_descriptor_;
}

const MsgReqEnterServerResultSL& MsgReqEnterServerResultSL::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgReqEnterServerResultSL* MsgReqEnterServerResultSL::default_instance_ = NULL;

MsgReqEnterServerResultSL* MsgReqEnterServerResultSL::New(::google::protobuf::Arena* arena) const {
  MsgReqEnterServerResultSL* n = new MsgReqEnterServerResultSL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqEnterServerResultSL::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgReqEnterServerResultSL)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgReqEnterServerResultSL, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgReqEnterServerResultSL*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, gate_port_);
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MsgReqEnterServerResultSL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgReqEnterServerResultSL)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account_name;
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (tag == 18) {
         parse_account_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgReqEnterServerResultSL.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gate_ip;
        break;
      }

      // optional string gate_ip = 3;
      case 3: {
        if (tag == 26) {
         parse_gate_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gate_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gate_ip().data(), this->gate_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgReqEnterServerResultSL.gate_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gate_port;
        break;
      }

      // optional int32 gate_port = 4;
      case 4: {
        if (tag == 32) {
         parse_gate_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgReqEnterServerResultSL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgReqEnterServerResultSL)
  return false;
#undef DO_
}

void MsgReqEnterServerResultSL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgReqEnterServerResultSL)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerResultSL.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional string gate_ip = 3;
  if (this->gate_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gate_ip().data(), this->gate_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerResultSL.gate_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gate_ip(), output);
  }

  // optional int32 gate_port = 4;
  if (this->gate_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gate_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgReqEnterServerResultSL)
}

::google::protobuf::uint8* MsgReqEnterServerResultSL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgReqEnterServerResultSL)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerResultSL.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional string gate_ip = 3;
  if (this->gate_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gate_ip().data(), this->gate_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgReqEnterServerResultSL.gate_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gate_ip(), target);
  }

  // optional int32 gate_port = 4;
  if (this->gate_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gate_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgReqEnterServerResultSL)
  return target;
}

int MsgReqEnterServerResultSL::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgReqEnterServerResultSL)
  int total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional string account_name = 2;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string gate_ip = 3;
  if (this->gate_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gate_ip());
  }

  // optional int32 gate_port = 4;
  if (this->gate_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gate_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqEnterServerResultSL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgReqEnterServerResultSL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgReqEnterServerResultSL* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgReqEnterServerResultSL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgReqEnterServerResultSL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgReqEnterServerResultSL)
    MergeFrom(*source);
  }
}

void MsgReqEnterServerResultSL::MergeFrom(const MsgReqEnterServerResultSL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgReqEnterServerResultSL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.gate_ip().size() > 0) {

    gate_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_ip_);
  }
  if (from.gate_port() != 0) {
    set_gate_port(from.gate_port());
  }
}

void MsgReqEnterServerResultSL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgReqEnterServerResultSL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqEnterServerResultSL::CopyFrom(const MsgReqEnterServerResultSL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgReqEnterServerResultSL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqEnterServerResultSL::IsInitialized() const {

  return true;
}

void MsgReqEnterServerResultSL::Swap(MsgReqEnterServerResultSL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqEnterServerResultSL::InternalSwap(MsgReqEnterServerResultSL* other) {
  std::swap(result_, other->result_);
  account_name_.Swap(&other->account_name_);
  gate_ip_.Swap(&other->gate_ip_);
  std::swap(gate_port_, other->gate_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqEnterServerResultSL::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqEnterServerResultSL_descriptor_;
  metadata.reflection = MsgReqEnterServerResultSL_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqEnterServerResultSL

// optional int32 result = 1;
void MsgReqEnterServerResultSL::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 MsgReqEnterServerResultSL::result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.result)
  return result_;
}
 void MsgReqEnterServerResultSL::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.result)
}

// optional string account_name = 2;
void MsgReqEnterServerResultSL::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqEnterServerResultSL::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerResultSL::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.account_name)
}
 void MsgReqEnterServerResultSL::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerResultSL.account_name)
}
 void MsgReqEnterServerResultSL::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerResultSL.account_name)
}
 ::std::string* MsgReqEnterServerResultSL::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerResultSL.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqEnterServerResultSL::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerResultSL.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerResultSL::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerResultSL.account_name)
}

// optional string gate_ip = 3;
void MsgReqEnterServerResultSL::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReqEnterServerResultSL::gate_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerResultSL::set_gate_ip(const ::std::string& value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}
 void MsgReqEnterServerResultSL::set_gate_ip(const char* value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}
 void MsgReqEnterServerResultSL::set_gate_ip(const char* value, size_t size) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}
 ::std::string* MsgReqEnterServerResultSL::mutable_gate_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerResultSL.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReqEnterServerResultSL::release_gate_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerResultSL.gate_ip)
  
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReqEnterServerResultSL::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    
  } else {
    
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}

// optional int32 gate_port = 4;
void MsgReqEnterServerResultSL::clear_gate_port() {
  gate_port_ = 0;
}
 ::google::protobuf::int32 MsgReqEnterServerResultSL::gate_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.gate_port)
  return gate_port_;
}
 void MsgReqEnterServerResultSL::set_gate_port(::google::protobuf::int32 value) {
  
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.gate_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_ss

// @@protoc_insertion_point(global_scope)
