// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace packet_ss {

namespace {

const ::google::protobuf::Descriptor* MsgRegisterSW_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRegisterSW_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRegisterWS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRegisterWS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgServerInfoWS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgServerInfoWS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgServerInfoWS_ServerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgServerInfoWS_ServerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLogin2NodeGN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLogin2NodeGN_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEnterPermissionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEnterPermissionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEnterPermissionAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEnterPermissionAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgEnterPermissionAck_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_5fserver_2eproto() {
  protobuf_AddDesc_server_5fserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server_server.proto");
  GOOGLE_CHECK(file != NULL);
  MsgRegisterSW_descriptor_ = file->message_type(0);
  static const int MsgRegisterSW_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, listen_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, listen_port_),
  };
  MsgRegisterSW_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgRegisterSW_descriptor_,
      MsgRegisterSW::default_instance_,
      MsgRegisterSW_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgRegisterSW),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterSW, _is_default_instance_));
  MsgRegisterWS_descriptor_ = file->message_type(1);
  static const int MsgRegisterWS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterWS, server_id_),
  };
  MsgRegisterWS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgRegisterWS_descriptor_,
      MsgRegisterWS::default_instance_,
      MsgRegisterWS_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgRegisterWS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterWS, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRegisterWS, _is_default_instance_));
  MsgServerInfoWS_descriptor_ = file->message_type(2);
  static const int MsgServerInfoWS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS, server_info_),
  };
  MsgServerInfoWS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgServerInfoWS_descriptor_,
      MsgServerInfoWS::default_instance_,
      MsgServerInfoWS_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgServerInfoWS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS, _is_default_instance_));
  MsgServerInfoWS_ServerInfo_descriptor_ = MsgServerInfoWS_descriptor_->nested_type(0);
  static const int MsgServerInfoWS_ServerInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, listen_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, listen_port_),
  };
  MsgServerInfoWS_ServerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgServerInfoWS_ServerInfo_descriptor_,
      MsgServerInfoWS_ServerInfo::default_instance_,
      MsgServerInfoWS_ServerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgServerInfoWS_ServerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgServerInfoWS_ServerInfo, _is_default_instance_));
  MsgLogin2NodeGN_descriptor_ = file->message_type(3);
  static const int MsgLogin2NodeGN_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, server_id_),
  };
  MsgLogin2NodeGN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgLogin2NodeGN_descriptor_,
      MsgLogin2NodeGN::default_instance_,
      MsgLogin2NodeGN_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgLogin2NodeGN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogin2NodeGN, _is_default_instance_));
  MsgEnterPermissionReq_descriptor_ = file->message_type(4);
  static const int MsgEnterPermissionReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionReq, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionReq, session_key_),
  };
  MsgEnterPermissionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgEnterPermissionReq_descriptor_,
      MsgEnterPermissionReq::default_instance_,
      MsgEnterPermissionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgEnterPermissionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionReq, _is_default_instance_));
  MsgEnterPermissionAck_descriptor_ = file->message_type(5);
  static const int MsgEnterPermissionAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionAck, check_result_),
  };
  MsgEnterPermissionAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgEnterPermissionAck_descriptor_,
      MsgEnterPermissionAck::default_instance_,
      MsgEnterPermissionAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgEnterPermissionAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterPermissionAck, _is_default_instance_));
  MsgEnterPermissionAck_Result_descriptor_ = MsgEnterPermissionAck_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_5fserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgRegisterSW_descriptor_, &MsgRegisterSW::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgRegisterWS_descriptor_, &MsgRegisterWS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgServerInfoWS_descriptor_, &MsgServerInfoWS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgServerInfoWS_ServerInfo_descriptor_, &MsgServerInfoWS_ServerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgLogin2NodeGN_descriptor_, &MsgLogin2NodeGN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgEnterPermissionReq_descriptor_, &MsgEnterPermissionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgEnterPermissionAck_descriptor_, &MsgEnterPermissionAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_5fserver_2eproto() {
  delete MsgRegisterSW::default_instance_;
  delete MsgRegisterSW_reflection_;
  delete MsgRegisterWS::default_instance_;
  delete MsgRegisterWS_reflection_;
  delete MsgServerInfoWS::default_instance_;
  delete MsgServerInfoWS_reflection_;
  delete MsgServerInfoWS_ServerInfo::default_instance_;
  delete MsgServerInfoWS_ServerInfo_reflection_;
  delete MsgLogin2NodeGN::default_instance_;
  delete MsgLogin2NodeGN_reflection_;
  delete MsgEnterPermissionReq::default_instance_;
  delete MsgEnterPermissionReq_reflection_;
  delete MsgEnterPermissionAck::default_instance_;
  delete MsgEnterPermissionAck_reflection_;
}

void protobuf_AddDesc_server_5fserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_server_5fserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023server_server.proto\022\tpacket_ss\"J\n\rMsgR"
    "egisterSW\022\021\n\tpeer_type\030\001 \001(\005\022\021\n\tlisten_i"
    "p\030\002 \001(\t\022\023\n\013listen_port\030\003 \001(\005\"\"\n\rMsgRegis"
    "terWS\022\021\n\tserver_id\030\001 \001(\005\"\251\001\n\017MsgServerIn"
    "foWS\022:\n\013server_info\030\001 \003(\0132%.packet_ss.Ms"
    "gServerInfoWS.ServerInfo\032Z\n\nServerInfo\022\021"
    "\n\tpeer_type\030\001 \001(\005\022\021\n\tserver_id\030\002 \001(\005\022\021\n\t"
    "listen_ip\030\003 \001(\t\022\023\n\013listen_port\030\004 \001(\005\"7\n\017"
    "MsgLogin2NodeGN\022\021\n\tpeer_type\030\001 \001(\005\022\021\n\tse"
    "rver_id\030\002 \001(\005\"B\n\025MsgEnterPermissionReq\022\024"
    "\n\014account_name\030\001 \001(\t\022\023\n\013session_key\030\002 \001("
    "\t\"y\n\025MsgEnterPermissionAck\022=\n\014check_resu"
    "lt\030\001 \001(\0162\'.packet_ss.MsgEnterPermissionA"
    "ck.Result\"!\n\006Result\022\006\n\002ok\020\000\022\017\n\013key_inval"
    "id\020\001b\006proto3", 572);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_server.proto", &protobuf_RegisterTypes);
  MsgRegisterSW::default_instance_ = new MsgRegisterSW();
  MsgRegisterWS::default_instance_ = new MsgRegisterWS();
  MsgServerInfoWS::default_instance_ = new MsgServerInfoWS();
  MsgServerInfoWS_ServerInfo::default_instance_ = new MsgServerInfoWS_ServerInfo();
  MsgLogin2NodeGN::default_instance_ = new MsgLogin2NodeGN();
  MsgEnterPermissionReq::default_instance_ = new MsgEnterPermissionReq();
  MsgEnterPermissionAck::default_instance_ = new MsgEnterPermissionAck();
  MsgRegisterSW::default_instance_->InitAsDefaultInstance();
  MsgRegisterWS::default_instance_->InitAsDefaultInstance();
  MsgServerInfoWS::default_instance_->InitAsDefaultInstance();
  MsgServerInfoWS_ServerInfo::default_instance_->InitAsDefaultInstance();
  MsgLogin2NodeGN::default_instance_->InitAsDefaultInstance();
  MsgEnterPermissionReq::default_instance_->InitAsDefaultInstance();
  MsgEnterPermissionAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_5fserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_5fserver_2eproto {
  StaticDescriptorInitializer_server_5fserver_2eproto() {
    protobuf_AddDesc_server_5fserver_2eproto();
  }
} static_descriptor_initializer_server_5fserver_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRegisterSW::kPeerTypeFieldNumber;
const int MsgRegisterSW::kListenIpFieldNumber;
const int MsgRegisterSW::kListenPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRegisterSW::MsgRegisterSW()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgRegisterSW)
}

void MsgRegisterSW::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgRegisterSW::MsgRegisterSW(const MsgRegisterSW& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgRegisterSW)
}

void MsgRegisterSW::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_type_ = 0;
  listen_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port_ = 0;
}

MsgRegisterSW::~MsgRegisterSW() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgRegisterSW)
  SharedDtor();
}

void MsgRegisterSW::SharedDtor() {
  listen_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgRegisterSW::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRegisterSW::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRegisterSW_descriptor_;
}

const MsgRegisterSW& MsgRegisterSW::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgRegisterSW* MsgRegisterSW::default_instance_ = NULL;

MsgRegisterSW* MsgRegisterSW::New(::google::protobuf::Arena* arena) const {
  MsgRegisterSW* n = new MsgRegisterSW;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRegisterSW::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgRegisterSW)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgRegisterSW, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgRegisterSW*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(peer_type_, listen_port_);
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MsgRegisterSW::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgRegisterSW)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peer_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peer_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_listen_ip;
        break;
      }

      // optional string listen_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_listen_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen_ip().data(), this->listen_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgRegisterSW.listen_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_listen_port;
        break;
      }

      // optional int32 listen_port = 3;
      case 3: {
        if (tag == 24) {
         parse_listen_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listen_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgRegisterSW)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgRegisterSW)
  return false;
#undef DO_
}

void MsgRegisterSW::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgRegisterSW)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peer_type(), output);
  }

  // optional string listen_ip = 2;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgRegisterSW.listen_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->listen_ip(), output);
  }

  // optional int32 listen_port = 3;
  if (this->listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->listen_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgRegisterSW)
}

::google::protobuf::uint8* MsgRegisterSW::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgRegisterSW)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peer_type(), target);
  }

  // optional string listen_ip = 2;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgRegisterSW.listen_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->listen_ip(), target);
  }

  // optional int32 listen_port = 3;
  if (this->listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->listen_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgRegisterSW)
  return target;
}

int MsgRegisterSW::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgRegisterSW)
  int total_size = 0;

  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peer_type());
  }

  // optional string listen_ip = 2;
  if (this->listen_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen_ip());
  }

  // optional int32 listen_port = 3;
  if (this->listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listen_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRegisterSW::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgRegisterSW)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgRegisterSW* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRegisterSW>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgRegisterSW)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgRegisterSW)
    MergeFrom(*source);
  }
}

void MsgRegisterSW::MergeFrom(const MsgRegisterSW& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgRegisterSW)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.peer_type() != 0) {
    set_peer_type(from.peer_type());
  }
  if (from.listen_ip().size() > 0) {

    listen_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_ip_);
  }
  if (from.listen_port() != 0) {
    set_listen_port(from.listen_port());
  }
}

void MsgRegisterSW::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgRegisterSW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRegisterSW::CopyFrom(const MsgRegisterSW& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgRegisterSW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterSW::IsInitialized() const {

  return true;
}

void MsgRegisterSW::Swap(MsgRegisterSW* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRegisterSW::InternalSwap(MsgRegisterSW* other) {
  std::swap(peer_type_, other->peer_type_);
  listen_ip_.Swap(&other->listen_ip_);
  std::swap(listen_port_, other->listen_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRegisterSW::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRegisterSW_descriptor_;
  metadata.reflection = MsgRegisterSW_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRegisterSW

// optional int32 peer_type = 1;
void MsgRegisterSW::clear_peer_type() {
  peer_type_ = 0;
}
 ::google::protobuf::int32 MsgRegisterSW::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.peer_type)
  return peer_type_;
}
 void MsgRegisterSW::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.peer_type)
}

// optional string listen_ip = 2;
void MsgRegisterSW::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgRegisterSW::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRegisterSW::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_ip)
}
 void MsgRegisterSW::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgRegisterSW.listen_ip)
}
 void MsgRegisterSW::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgRegisterSW.listen_ip)
}
 ::std::string* MsgRegisterSW::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgRegisterSW::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgRegisterSW.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRegisterSW::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgRegisterSW.listen_ip)
}

// optional int32 listen_port = 3;
void MsgRegisterSW::clear_listen_port() {
  listen_port_ = 0;
}
 ::google::protobuf::int32 MsgRegisterSW::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_port)
  return listen_port_;
}
 void MsgRegisterSW::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRegisterWS::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRegisterWS::MsgRegisterWS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgRegisterWS)
}

void MsgRegisterWS::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgRegisterWS::MsgRegisterWS(const MsgRegisterWS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgRegisterWS)
}

void MsgRegisterWS::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  server_id_ = 0;
}

MsgRegisterWS::~MsgRegisterWS() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgRegisterWS)
  SharedDtor();
}

void MsgRegisterWS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgRegisterWS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRegisterWS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRegisterWS_descriptor_;
}

const MsgRegisterWS& MsgRegisterWS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgRegisterWS* MsgRegisterWS::default_instance_ = NULL;

MsgRegisterWS* MsgRegisterWS::New(::google::protobuf::Arena* arena) const {
  MsgRegisterWS* n = new MsgRegisterWS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRegisterWS::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgRegisterWS)
  server_id_ = 0;
}

bool MsgRegisterWS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgRegisterWS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgRegisterWS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgRegisterWS)
  return false;
#undef DO_
}

void MsgRegisterWS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgRegisterWS)
  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgRegisterWS)
}

::google::protobuf::uint8* MsgRegisterWS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgRegisterWS)
  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgRegisterWS)
  return target;
}

int MsgRegisterWS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgRegisterWS)
  int total_size = 0;

  // optional int32 server_id = 1;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRegisterWS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgRegisterWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgRegisterWS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRegisterWS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgRegisterWS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgRegisterWS)
    MergeFrom(*source);
  }
}

void MsgRegisterWS::MergeFrom(const MsgRegisterWS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgRegisterWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void MsgRegisterWS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgRegisterWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRegisterWS::CopyFrom(const MsgRegisterWS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgRegisterWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRegisterWS::IsInitialized() const {

  return true;
}

void MsgRegisterWS::Swap(MsgRegisterWS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRegisterWS::InternalSwap(MsgRegisterWS* other) {
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRegisterWS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRegisterWS_descriptor_;
  metadata.reflection = MsgRegisterWS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRegisterWS

// optional int32 server_id = 1;
void MsgRegisterWS::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgRegisterWS::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterWS.server_id)
  return server_id_;
}
 void MsgRegisterWS::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterWS.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgServerInfoWS_ServerInfo::kPeerTypeFieldNumber;
const int MsgServerInfoWS_ServerInfo::kServerIdFieldNumber;
const int MsgServerInfoWS_ServerInfo::kListenIpFieldNumber;
const int MsgServerInfoWS_ServerInfo::kListenPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgServerInfoWS_ServerInfo::MsgServerInfoWS_ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgServerInfoWS.ServerInfo)
}

void MsgServerInfoWS_ServerInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgServerInfoWS_ServerInfo::MsgServerInfoWS_ServerInfo(const MsgServerInfoWS_ServerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgServerInfoWS.ServerInfo)
}

void MsgServerInfoWS_ServerInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_type_ = 0;
  server_id_ = 0;
  listen_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port_ = 0;
}

MsgServerInfoWS_ServerInfo::~MsgServerInfoWS_ServerInfo() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgServerInfoWS.ServerInfo)
  SharedDtor();
}

void MsgServerInfoWS_ServerInfo::SharedDtor() {
  listen_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgServerInfoWS_ServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgServerInfoWS_ServerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgServerInfoWS_ServerInfo_descriptor_;
}

const MsgServerInfoWS_ServerInfo& MsgServerInfoWS_ServerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgServerInfoWS_ServerInfo* MsgServerInfoWS_ServerInfo::default_instance_ = NULL;

MsgServerInfoWS_ServerInfo* MsgServerInfoWS_ServerInfo::New(::google::protobuf::Arena* arena) const {
  MsgServerInfoWS_ServerInfo* n = new MsgServerInfoWS_ServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgServerInfoWS_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgServerInfoWS.ServerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgServerInfoWS_ServerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgServerInfoWS_ServerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(peer_type_, server_id_);
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool MsgServerInfoWS_ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgServerInfoWS.ServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peer_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peer_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional int32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_listen_ip;
        break;
      }

      // optional string listen_ip = 3;
      case 3: {
        if (tag == 26) {
         parse_listen_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen_ip().data(), this->listen_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgServerInfoWS.ServerInfo.listen_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_listen_port;
        break;
      }

      // optional int32 listen_port = 4;
      case 4: {
        if (tag == 32) {
         parse_listen_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listen_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgServerInfoWS.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgServerInfoWS.ServerInfo)
  return false;
#undef DO_
}

void MsgServerInfoWS_ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgServerInfoWS.ServerInfo)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peer_type(), output);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_id(), output);
  }

  // optional string listen_ip = 3;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgServerInfoWS.ServerInfo.listen_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->listen_ip(), output);
  }

  // optional int32 listen_port = 4;
  if (this->listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->listen_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgServerInfoWS.ServerInfo)
}

::google::protobuf::uint8* MsgServerInfoWS_ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgServerInfoWS.ServerInfo)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peer_type(), target);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_id(), target);
  }

  // optional string listen_ip = 3;
  if (this->listen_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip().data(), this->listen_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgServerInfoWS.ServerInfo.listen_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->listen_ip(), target);
  }

  // optional int32 listen_port = 4;
  if (this->listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->listen_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgServerInfoWS.ServerInfo)
  return target;
}

int MsgServerInfoWS_ServerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgServerInfoWS.ServerInfo)
  int total_size = 0;

  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peer_type());
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  // optional string listen_ip = 3;
  if (this->listen_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen_ip());
  }

  // optional int32 listen_port = 4;
  if (this->listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listen_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgServerInfoWS_ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgServerInfoWS_ServerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgServerInfoWS_ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgServerInfoWS.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgServerInfoWS.ServerInfo)
    MergeFrom(*source);
  }
}

void MsgServerInfoWS_ServerInfo::MergeFrom(const MsgServerInfoWS_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.peer_type() != 0) {
    set_peer_type(from.peer_type());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
  if (from.listen_ip().size() > 0) {

    listen_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_ip_);
  }
  if (from.listen_port() != 0) {
    set_listen_port(from.listen_port());
  }
}

void MsgServerInfoWS_ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgServerInfoWS_ServerInfo::CopyFrom(const MsgServerInfoWS_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgServerInfoWS.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgServerInfoWS_ServerInfo::IsInitialized() const {

  return true;
}

void MsgServerInfoWS_ServerInfo::Swap(MsgServerInfoWS_ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgServerInfoWS_ServerInfo::InternalSwap(MsgServerInfoWS_ServerInfo* other) {
  std::swap(peer_type_, other->peer_type_);
  std::swap(server_id_, other->server_id_);
  listen_ip_.Swap(&other->listen_ip_);
  std::swap(listen_port_, other->listen_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgServerInfoWS_ServerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgServerInfoWS_ServerInfo_descriptor_;
  metadata.reflection = MsgServerInfoWS_ServerInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgServerInfoWS::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgServerInfoWS::MsgServerInfoWS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgServerInfoWS)
}

void MsgServerInfoWS::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgServerInfoWS::MsgServerInfoWS(const MsgServerInfoWS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgServerInfoWS)
}

void MsgServerInfoWS::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MsgServerInfoWS::~MsgServerInfoWS() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgServerInfoWS)
  SharedDtor();
}

void MsgServerInfoWS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgServerInfoWS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgServerInfoWS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgServerInfoWS_descriptor_;
}

const MsgServerInfoWS& MsgServerInfoWS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgServerInfoWS* MsgServerInfoWS::default_instance_ = NULL;

MsgServerInfoWS* MsgServerInfoWS::New(::google::protobuf::Arena* arena) const {
  MsgServerInfoWS* n = new MsgServerInfoWS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgServerInfoWS::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgServerInfoWS)
  server_info_.Clear();
}

bool MsgServerInfoWS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgServerInfoWS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_server_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_server_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgServerInfoWS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgServerInfoWS)
  return false;
#undef DO_
}

void MsgServerInfoWS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgServerInfoWS)
  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  for (unsigned int i = 0, n = this->server_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->server_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgServerInfoWS)
}

::google::protobuf::uint8* MsgServerInfoWS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgServerInfoWS)
  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  for (unsigned int i = 0, n = this->server_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->server_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgServerInfoWS)
  return target;
}

int MsgServerInfoWS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgServerInfoWS)
  int total_size = 0;

  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  total_size += 1 * this->server_info_size();
  for (int i = 0; i < this->server_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_info(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgServerInfoWS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgServerInfoWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgServerInfoWS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgServerInfoWS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgServerInfoWS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgServerInfoWS)
    MergeFrom(*source);
  }
}

void MsgServerInfoWS::MergeFrom(const MsgServerInfoWS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgServerInfoWS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  server_info_.MergeFrom(from.server_info_);
}

void MsgServerInfoWS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgServerInfoWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgServerInfoWS::CopyFrom(const MsgServerInfoWS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgServerInfoWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgServerInfoWS::IsInitialized() const {

  return true;
}

void MsgServerInfoWS::Swap(MsgServerInfoWS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgServerInfoWS::InternalSwap(MsgServerInfoWS* other) {
  server_info_.UnsafeArenaSwap(&other->server_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgServerInfoWS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgServerInfoWS_descriptor_;
  metadata.reflection = MsgServerInfoWS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgServerInfoWS_ServerInfo

// optional int32 peer_type = 1;
void MsgServerInfoWS_ServerInfo::clear_peer_type() {
  peer_type_ = 0;
}
 ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
  return peer_type_;
}
 void MsgServerInfoWS_ServerInfo::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
}

// optional int32 server_id = 2;
void MsgServerInfoWS_ServerInfo::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
  return server_id_;
}
 void MsgServerInfoWS_ServerInfo::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
}

// optional string listen_ip = 3;
void MsgServerInfoWS_ServerInfo::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgServerInfoWS_ServerInfo::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgServerInfoWS_ServerInfo::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
 void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
 void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
 ::std::string* MsgServerInfoWS_ServerInfo::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgServerInfoWS_ServerInfo::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgServerInfoWS_ServerInfo::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}

// optional int32 listen_port = 4;
void MsgServerInfoWS_ServerInfo::clear_listen_port() {
  listen_port_ = 0;
}
 ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
  return listen_port_;
}
 void MsgServerInfoWS_ServerInfo::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
}

// -------------------------------------------------------------------

// MsgServerInfoWS

// repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
int MsgServerInfoWS::server_info_size() const {
  return server_info_.size();
}
void MsgServerInfoWS::clear_server_info() {
  server_info_.Clear();
}
const ::packet_ss::MsgServerInfoWS_ServerInfo& MsgServerInfoWS::server_info(int index) const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Get(index);
}
::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::mutable_server_info(int index) {
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Mutable(index);
}
::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::add_server_info() {
  // @@protoc_insertion_point(field_add:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >*
MsgServerInfoWS::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:packet_ss.MsgServerInfoWS.server_info)
  return &server_info_;
}
const ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >&
MsgServerInfoWS::server_info() const {
  // @@protoc_insertion_point(field_list:packet_ss.MsgServerInfoWS.server_info)
  return server_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLogin2NodeGN::kPeerTypeFieldNumber;
const int MsgLogin2NodeGN::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLogin2NodeGN::MsgLogin2NodeGN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgLogin2NodeGN)
}

void MsgLogin2NodeGN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgLogin2NodeGN::MsgLogin2NodeGN(const MsgLogin2NodeGN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgLogin2NodeGN)
}

void MsgLogin2NodeGN::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_type_ = 0;
  server_id_ = 0;
}

MsgLogin2NodeGN::~MsgLogin2NodeGN() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgLogin2NodeGN)
  SharedDtor();
}

void MsgLogin2NodeGN::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgLogin2NodeGN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLogin2NodeGN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLogin2NodeGN_descriptor_;
}

const MsgLogin2NodeGN& MsgLogin2NodeGN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgLogin2NodeGN* MsgLogin2NodeGN::default_instance_ = NULL;

MsgLogin2NodeGN* MsgLogin2NodeGN::New(::google::protobuf::Arena* arena) const {
  MsgLogin2NodeGN* n = new MsgLogin2NodeGN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLogin2NodeGN::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgLogin2NodeGN)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgLogin2NodeGN, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgLogin2NodeGN*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(peer_type_, server_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool MsgLogin2NodeGN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgLogin2NodeGN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peer_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peer_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional int32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgLogin2NodeGN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgLogin2NodeGN)
  return false;
#undef DO_
}

void MsgLogin2NodeGN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgLogin2NodeGN)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peer_type(), output);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgLogin2NodeGN)
}

::google::protobuf::uint8* MsgLogin2NodeGN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgLogin2NodeGN)
  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peer_type(), target);
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgLogin2NodeGN)
  return target;
}

int MsgLogin2NodeGN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgLogin2NodeGN)
  int total_size = 0;

  // optional int32 peer_type = 1;
  if (this->peer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peer_type());
  }

  // optional int32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLogin2NodeGN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgLogin2NodeGN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgLogin2NodeGN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLogin2NodeGN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgLogin2NodeGN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgLogin2NodeGN)
    MergeFrom(*source);
  }
}

void MsgLogin2NodeGN::MergeFrom(const MsgLogin2NodeGN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgLogin2NodeGN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.peer_type() != 0) {
    set_peer_type(from.peer_type());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void MsgLogin2NodeGN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgLogin2NodeGN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogin2NodeGN::CopyFrom(const MsgLogin2NodeGN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgLogin2NodeGN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogin2NodeGN::IsInitialized() const {

  return true;
}

void MsgLogin2NodeGN::Swap(MsgLogin2NodeGN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLogin2NodeGN::InternalSwap(MsgLogin2NodeGN* other) {
  std::swap(peer_type_, other->peer_type_);
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLogin2NodeGN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLogin2NodeGN_descriptor_;
  metadata.reflection = MsgLogin2NodeGN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLogin2NodeGN

// optional int32 peer_type = 1;
void MsgLogin2NodeGN::clear_peer_type() {
  peer_type_ = 0;
}
 ::google::protobuf::int32 MsgLogin2NodeGN::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgLogin2NodeGN.peer_type)
  return peer_type_;
}
 void MsgLogin2NodeGN::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgLogin2NodeGN.peer_type)
}

// optional int32 server_id = 2;
void MsgLogin2NodeGN::clear_server_id() {
  server_id_ = 0;
}
 ::google::protobuf::int32 MsgLogin2NodeGN::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgLogin2NodeGN.server_id)
  return server_id_;
}
 void MsgLogin2NodeGN::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgLogin2NodeGN.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgEnterPermissionReq::kAccountNameFieldNumber;
const int MsgEnterPermissionReq::kSessionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgEnterPermissionReq::MsgEnterPermissionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgEnterPermissionReq)
}

void MsgEnterPermissionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgEnterPermissionReq::MsgEnterPermissionReq(const MsgEnterPermissionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgEnterPermissionReq)
}

void MsgEnterPermissionReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgEnterPermissionReq::~MsgEnterPermissionReq() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgEnterPermissionReq)
  SharedDtor();
}

void MsgEnterPermissionReq::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgEnterPermissionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEnterPermissionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEnterPermissionReq_descriptor_;
}

const MsgEnterPermissionReq& MsgEnterPermissionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgEnterPermissionReq* MsgEnterPermissionReq::default_instance_ = NULL;

MsgEnterPermissionReq* MsgEnterPermissionReq::New(::google::protobuf::Arena* arena) const {
  MsgEnterPermissionReq* n = new MsgEnterPermissionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgEnterPermissionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgEnterPermissionReq)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgEnterPermissionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgEnterPermissionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgEnterPermissionReq.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_session_key;
        break;
      }

      // optional string session_key = 2;
      case 2: {
        if (tag == 18) {
         parse_session_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_key().data(), this->session_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet_ss.MsgEnterPermissionReq.session_key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgEnterPermissionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgEnterPermissionReq)
  return false;
#undef DO_
}

void MsgEnterPermissionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgEnterPermissionReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgEnterPermissionReq.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgEnterPermissionReq.session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_key(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgEnterPermissionReq)
}

::google::protobuf::uint8* MsgEnterPermissionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgEnterPermissionReq)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgEnterPermissionReq.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), this->session_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet_ss.MsgEnterPermissionReq.session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgEnterPermissionReq)
  return target;
}

int MsgEnterPermissionReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgEnterPermissionReq)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string session_key = 2;
  if (this->session_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEnterPermissionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgEnterPermissionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgEnterPermissionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgEnterPermissionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgEnterPermissionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgEnterPermissionReq)
    MergeFrom(*source);
  }
}

void MsgEnterPermissionReq::MergeFrom(const MsgEnterPermissionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgEnterPermissionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.session_key().size() > 0) {

    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
}

void MsgEnterPermissionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgEnterPermissionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEnterPermissionReq::CopyFrom(const MsgEnterPermissionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgEnterPermissionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEnterPermissionReq::IsInitialized() const {

  return true;
}

void MsgEnterPermissionReq::Swap(MsgEnterPermissionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgEnterPermissionReq::InternalSwap(MsgEnterPermissionReq* other) {
  account_name_.Swap(&other->account_name_);
  session_key_.Swap(&other->session_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgEnterPermissionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEnterPermissionReq_descriptor_;
  metadata.reflection = MsgEnterPermissionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgEnterPermissionReq

// optional string account_name = 1;
void MsgEnterPermissionReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgEnterPermissionReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgEnterPermissionReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgEnterPermissionReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgEnterPermissionReq.account_name)
}
 void MsgEnterPermissionReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgEnterPermissionReq.account_name)
}
 void MsgEnterPermissionReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgEnterPermissionReq.account_name)
}
 ::std::string* MsgEnterPermissionReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgEnterPermissionReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgEnterPermissionReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgEnterPermissionReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgEnterPermissionReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgEnterPermissionReq.account_name)
}

// optional string session_key = 2;
void MsgEnterPermissionReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgEnterPermissionReq::session_key() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgEnterPermissionReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgEnterPermissionReq::set_session_key(const ::std::string& value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgEnterPermissionReq.session_key)
}
 void MsgEnterPermissionReq::set_session_key(const char* value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgEnterPermissionReq.session_key)
}
 void MsgEnterPermissionReq::set_session_key(const char* value, size_t size) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgEnterPermissionReq.session_key)
}
 ::std::string* MsgEnterPermissionReq::mutable_session_key() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgEnterPermissionReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgEnterPermissionReq::release_session_key() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgEnterPermissionReq.session_key)
  
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgEnterPermissionReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    
  } else {
    
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgEnterPermissionReq.session_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgEnterPermissionAck_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEnterPermissionAck_Result_descriptor_;
}
bool MsgEnterPermissionAck_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgEnterPermissionAck_Result MsgEnterPermissionAck::ok;
const MsgEnterPermissionAck_Result MsgEnterPermissionAck::key_invalid;
const MsgEnterPermissionAck_Result MsgEnterPermissionAck::Result_MIN;
const MsgEnterPermissionAck_Result MsgEnterPermissionAck::Result_MAX;
const int MsgEnterPermissionAck::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgEnterPermissionAck::kCheckResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgEnterPermissionAck::MsgEnterPermissionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet_ss.MsgEnterPermissionAck)
}

void MsgEnterPermissionAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgEnterPermissionAck::MsgEnterPermissionAck(const MsgEnterPermissionAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet_ss.MsgEnterPermissionAck)
}

void MsgEnterPermissionAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  check_result_ = 0;
}

MsgEnterPermissionAck::~MsgEnterPermissionAck() {
  // @@protoc_insertion_point(destructor:packet_ss.MsgEnterPermissionAck)
  SharedDtor();
}

void MsgEnterPermissionAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEnterPermissionAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEnterPermissionAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEnterPermissionAck_descriptor_;
}

const MsgEnterPermissionAck& MsgEnterPermissionAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fserver_2eproto();
  return *default_instance_;
}

MsgEnterPermissionAck* MsgEnterPermissionAck::default_instance_ = NULL;

MsgEnterPermissionAck* MsgEnterPermissionAck::New(::google::protobuf::Arena* arena) const {
  MsgEnterPermissionAck* n = new MsgEnterPermissionAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgEnterPermissionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet_ss.MsgEnterPermissionAck)
  check_result_ = 0;
}

bool MsgEnterPermissionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet_ss.MsgEnterPermissionAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_check_result(static_cast< ::packet_ss::MsgEnterPermissionAck_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet_ss.MsgEnterPermissionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet_ss.MsgEnterPermissionAck)
  return false;
#undef DO_
}

void MsgEnterPermissionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet_ss.MsgEnterPermissionAck)
  // optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
  if (this->check_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->check_result(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet_ss.MsgEnterPermissionAck)
}

::google::protobuf::uint8* MsgEnterPermissionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet_ss.MsgEnterPermissionAck)
  // optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
  if (this->check_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->check_result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet_ss.MsgEnterPermissionAck)
  return target;
}

int MsgEnterPermissionAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet_ss.MsgEnterPermissionAck)
  int total_size = 0;

  // optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
  if (this->check_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEnterPermissionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet_ss.MsgEnterPermissionAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgEnterPermissionAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgEnterPermissionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet_ss.MsgEnterPermissionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet_ss.MsgEnterPermissionAck)
    MergeFrom(*source);
  }
}

void MsgEnterPermissionAck::MergeFrom(const MsgEnterPermissionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet_ss.MsgEnterPermissionAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.check_result() != 0) {
    set_check_result(from.check_result());
  }
}

void MsgEnterPermissionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet_ss.MsgEnterPermissionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEnterPermissionAck::CopyFrom(const MsgEnterPermissionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet_ss.MsgEnterPermissionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEnterPermissionAck::IsInitialized() const {

  return true;
}

void MsgEnterPermissionAck::Swap(MsgEnterPermissionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgEnterPermissionAck::InternalSwap(MsgEnterPermissionAck* other) {
  std::swap(check_result_, other->check_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgEnterPermissionAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEnterPermissionAck_descriptor_;
  metadata.reflection = MsgEnterPermissionAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgEnterPermissionAck

// optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
void MsgEnterPermissionAck::clear_check_result() {
  check_result_ = 0;
}
 ::packet_ss::MsgEnterPermissionAck_Result MsgEnterPermissionAck::check_result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgEnterPermissionAck.check_result)
  return static_cast< ::packet_ss::MsgEnterPermissionAck_Result >(check_result_);
}
 void MsgEnterPermissionAck::set_check_result(::packet_ss::MsgEnterPermissionAck_Result value) {
  
  check_result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgEnterPermissionAck.check_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_ss

// @@protoc_insertion_point(global_scope)
