// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_server.proto

#ifndef PROTOBUF_server_5fserver_2eproto__INCLUDED
#define PROTOBUF_server_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_type.pb.h"
// @@protoc_insertion_point(includes)

namespace packet_ss {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_server_5fserver_2eproto();
void protobuf_AssignDesc_server_5fserver_2eproto();
void protobuf_ShutdownFile_server_5fserver_2eproto();

class MsgLogin2NodeGN;
class MsgRegisterSW;
class MsgRegisterWS;
class MsgReqEnterServerLS;
class MsgReqEnterServerResultSL;
class MsgReqServerListLM;
class MsgServerInfoWS;
class MsgServerInfoWS_ServerInfo;
class MsgServerListML;
class MsgSyncLoginServerIdML;
class MsgWorldRegAtMasterAckMW;
class MsgWorldRegAtMasterWM;

// ===================================================================

class MsgRegisterSW : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgRegisterSW) */ {
 public:
  MsgRegisterSW();
  virtual ~MsgRegisterSW();

  MsgRegisterSW(const MsgRegisterSW& from);

  inline MsgRegisterSW& operator=(const MsgRegisterSW& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterSW& default_instance();

  void Swap(MsgRegisterSW* other);

  // implements Message ----------------------------------------------

  inline MsgRegisterSW* New() const { return New(NULL); }

  MsgRegisterSW* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterSW& from);
  void MergeFrom(const MsgRegisterSW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgRegisterSW* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peer_type = 1;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 1;
  ::google::protobuf::int32 peer_type() const;
  void set_peer_type(::google::protobuf::int32 value);

  // optional string listen_ip = 2;
  void clear_listen_ip();
  static const int kListenIpFieldNumber = 2;
  const ::std::string& listen_ip() const;
  void set_listen_ip(const ::std::string& value);
  void set_listen_ip(const char* value);
  void set_listen_ip(const char* value, size_t size);
  ::std::string* mutable_listen_ip();
  ::std::string* release_listen_ip();
  void set_allocated_listen_ip(::std::string* listen_ip);

  // optional int32 listen_port = 3;
  void clear_listen_port();
  static const int kListenPortFieldNumber = 3;
  ::google::protobuf::int32 listen_port() const;
  void set_listen_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgRegisterSW)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr listen_ip_;
  ::google::protobuf::int32 peer_type_;
  ::google::protobuf::int32 listen_port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterSW* default_instance_;
};
// -------------------------------------------------------------------

class MsgRegisterWS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgRegisterWS) */ {
 public:
  MsgRegisterWS();
  virtual ~MsgRegisterWS();

  MsgRegisterWS(const MsgRegisterWS& from);

  inline MsgRegisterWS& operator=(const MsgRegisterWS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterWS& default_instance();

  void Swap(MsgRegisterWS* other);

  // implements Message ----------------------------------------------

  inline MsgRegisterWS* New() const { return New(NULL); }

  MsgRegisterWS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterWS& from);
  void MergeFrom(const MsgRegisterWS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgRegisterWS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgRegisterWS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 server_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterWS* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerInfoWS_ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgServerInfoWS.ServerInfo) */ {
 public:
  MsgServerInfoWS_ServerInfo();
  virtual ~MsgServerInfoWS_ServerInfo();

  MsgServerInfoWS_ServerInfo(const MsgServerInfoWS_ServerInfo& from);

  inline MsgServerInfoWS_ServerInfo& operator=(const MsgServerInfoWS_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerInfoWS_ServerInfo& default_instance();

  void Swap(MsgServerInfoWS_ServerInfo* other);

  // implements Message ----------------------------------------------

  inline MsgServerInfoWS_ServerInfo* New() const { return New(NULL); }

  MsgServerInfoWS_ServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerInfoWS_ServerInfo& from);
  void MergeFrom(const MsgServerInfoWS_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgServerInfoWS_ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peer_type = 1;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 1;
  ::google::protobuf::int32 peer_type() const;
  void set_peer_type(::google::protobuf::int32 value);

  // optional int32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional string listen_ip = 3;
  void clear_listen_ip();
  static const int kListenIpFieldNumber = 3;
  const ::std::string& listen_ip() const;
  void set_listen_ip(const ::std::string& value);
  void set_listen_ip(const char* value);
  void set_listen_ip(const char* value, size_t size);
  ::std::string* mutable_listen_ip();
  ::std::string* release_listen_ip();
  void set_allocated_listen_ip(::std::string* listen_ip);

  // optional int32 listen_port = 4;
  void clear_listen_port();
  static const int kListenPortFieldNumber = 4;
  ::google::protobuf::int32 listen_port() const;
  void set_listen_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgServerInfoWS.ServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 peer_type_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::internal::ArenaStringPtr listen_ip_;
  ::google::protobuf::int32 listen_port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgServerInfoWS_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerInfoWS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgServerInfoWS) */ {
 public:
  MsgServerInfoWS();
  virtual ~MsgServerInfoWS();

  MsgServerInfoWS(const MsgServerInfoWS& from);

  inline MsgServerInfoWS& operator=(const MsgServerInfoWS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerInfoWS& default_instance();

  void Swap(MsgServerInfoWS* other);

  // implements Message ----------------------------------------------

  inline MsgServerInfoWS* New() const { return New(NULL); }

  MsgServerInfoWS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerInfoWS& from);
  void MergeFrom(const MsgServerInfoWS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgServerInfoWS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgServerInfoWS_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
  int server_info_size() const;
  void clear_server_info();
  static const int kServerInfoFieldNumber = 1;
  const ::packet_ss::MsgServerInfoWS_ServerInfo& server_info(int index) const;
  ::packet_ss::MsgServerInfoWS_ServerInfo* mutable_server_info(int index);
  ::packet_ss::MsgServerInfoWS_ServerInfo* add_server_info();
  ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >*
      mutable_server_info();
  const ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >&
      server_info() const;

  // @@protoc_insertion_point(class_scope:packet_ss.MsgServerInfoWS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo > server_info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgServerInfoWS* default_instance_;
};
// -------------------------------------------------------------------

class MsgLogin2NodeGN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgLogin2NodeGN) */ {
 public:
  MsgLogin2NodeGN();
  virtual ~MsgLogin2NodeGN();

  MsgLogin2NodeGN(const MsgLogin2NodeGN& from);

  inline MsgLogin2NodeGN& operator=(const MsgLogin2NodeGN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogin2NodeGN& default_instance();

  void Swap(MsgLogin2NodeGN* other);

  // implements Message ----------------------------------------------

  inline MsgLogin2NodeGN* New() const { return New(NULL); }

  MsgLogin2NodeGN* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLogin2NodeGN& from);
  void MergeFrom(const MsgLogin2NodeGN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgLogin2NodeGN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peer_type = 1;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 1;
  ::google::protobuf::int32 peer_type() const;
  void set_peer_type(::google::protobuf::int32 value);

  // optional int32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgLogin2NodeGN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 peer_type_;
  ::google::protobuf::int32 server_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgLogin2NodeGN* default_instance_;
};
// -------------------------------------------------------------------

class MsgReqServerListLM : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgReqServerListLM) */ {
 public:
  MsgReqServerListLM();
  virtual ~MsgReqServerListLM();

  MsgReqServerListLM(const MsgReqServerListLM& from);

  inline MsgReqServerListLM& operator=(const MsgReqServerListLM& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReqServerListLM& default_instance();

  void Swap(MsgReqServerListLM* other);

  // implements Message ----------------------------------------------

  inline MsgReqServerListLM* New() const { return New(NULL); }

  MsgReqServerListLM* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReqServerListLM& from);
  void MergeFrom(const MsgReqServerListLM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgReqServerListLM* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgReqServerListLM)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgReqServerListLM* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerListML : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgServerListML) */ {
 public:
  MsgServerListML();
  virtual ~MsgServerListML();

  MsgServerListML(const MsgServerListML& from);

  inline MsgServerListML& operator=(const MsgServerListML& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerListML& default_instance();

  void Swap(MsgServerListML* other);

  // implements Message ----------------------------------------------

  inline MsgServerListML* New() const { return New(NULL); }

  MsgServerListML* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerListML& from);
  void MergeFrom(const MsgServerListML& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgServerListML* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // repeated .pb_base.ServerProfile servers = 2;
  int servers_size() const;
  void clear_servers();
  static const int kServersFieldNumber = 2;
  const ::pb_base::ServerProfile& servers(int index) const;
  ::pb_base::ServerProfile* mutable_servers(int index);
  ::pb_base::ServerProfile* add_servers();
  ::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile >*
      mutable_servers();
  const ::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile >&
      servers() const;

  // optional .packet_ss.MsgReqServerListLM post_back = 3;
  bool has_post_back() const;
  void clear_post_back();
  static const int kPostBackFieldNumber = 3;
  const ::packet_ss::MsgReqServerListLM& post_back() const;
  ::packet_ss::MsgReqServerListLM* mutable_post_back();
  ::packet_ss::MsgReqServerListLM* release_post_back();
  void set_allocated_post_back(::packet_ss::MsgReqServerListLM* post_back);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgServerListML)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile > servers_;
  ::packet_ss::MsgReqServerListLM* post_back_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgServerListML* default_instance_;
};
// -------------------------------------------------------------------

class MsgSyncLoginServerIdML : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgSyncLoginServerIdML) */ {
 public:
  MsgSyncLoginServerIdML();
  virtual ~MsgSyncLoginServerIdML();

  MsgSyncLoginServerIdML(const MsgSyncLoginServerIdML& from);

  inline MsgSyncLoginServerIdML& operator=(const MsgSyncLoginServerIdML& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncLoginServerIdML& default_instance();

  void Swap(MsgSyncLoginServerIdML* other);

  // implements Message ----------------------------------------------

  inline MsgSyncLoginServerIdML* New() const { return New(NULL); }

  MsgSyncLoginServerIdML* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSyncLoginServerIdML& from);
  void MergeFrom(const MsgSyncLoginServerIdML& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgSyncLoginServerIdML* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgSyncLoginServerIdML)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 server_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgSyncLoginServerIdML* default_instance_;
};
// -------------------------------------------------------------------

class MsgWorldRegAtMasterWM : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgWorldRegAtMasterWM) */ {
 public:
  MsgWorldRegAtMasterWM();
  virtual ~MsgWorldRegAtMasterWM();

  MsgWorldRegAtMasterWM(const MsgWorldRegAtMasterWM& from);

  inline MsgWorldRegAtMasterWM& operator=(const MsgWorldRegAtMasterWM& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgWorldRegAtMasterWM& default_instance();

  void Swap(MsgWorldRegAtMasterWM* other);

  // implements Message ----------------------------------------------

  inline MsgWorldRegAtMasterWM* New() const { return New(NULL); }

  MsgWorldRegAtMasterWM* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgWorldRegAtMasterWM& from);
  void MergeFrom(const MsgWorldRegAtMasterWM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgWorldRegAtMasterWM* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 server_uid = 1;
  void clear_server_uid();
  static const int kServerUidFieldNumber = 1;
  ::google::protobuf::int32 server_uid() const;
  void set_server_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgWorldRegAtMasterWM)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 server_uid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgWorldRegAtMasterWM* default_instance_;
};
// -------------------------------------------------------------------

class MsgWorldRegAtMasterAckMW : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgWorldRegAtMasterAckMW) */ {
 public:
  MsgWorldRegAtMasterAckMW();
  virtual ~MsgWorldRegAtMasterAckMW();

  MsgWorldRegAtMasterAckMW(const MsgWorldRegAtMasterAckMW& from);

  inline MsgWorldRegAtMasterAckMW& operator=(const MsgWorldRegAtMasterAckMW& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgWorldRegAtMasterAckMW& default_instance();

  void Swap(MsgWorldRegAtMasterAckMW* other);

  // implements Message ----------------------------------------------

  inline MsgWorldRegAtMasterAckMW* New() const { return New(NULL); }

  MsgWorldRegAtMasterAckMW* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgWorldRegAtMasterAckMW& from);
  void MergeFrom(const MsgWorldRegAtMasterAckMW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgWorldRegAtMasterAckMW* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgWorldRegAtMasterAckMW)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgWorldRegAtMasterAckMW* default_instance_;
};
// -------------------------------------------------------------------

class MsgReqEnterServerLS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgReqEnterServerLS) */ {
 public:
  MsgReqEnterServerLS();
  virtual ~MsgReqEnterServerLS();

  MsgReqEnterServerLS(const MsgReqEnterServerLS& from);

  inline MsgReqEnterServerLS& operator=(const MsgReqEnterServerLS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReqEnterServerLS& default_instance();

  void Swap(MsgReqEnterServerLS* other);

  // implements Message ----------------------------------------------

  inline MsgReqEnterServerLS* New() const { return New(NULL); }

  MsgReqEnterServerLS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReqEnterServerLS& from);
  void MergeFrom(const MsgReqEnterServerLS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgReqEnterServerLS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string account_token = 2;
  void clear_account_token();
  static const int kAccountTokenFieldNumber = 2;
  const ::std::string& account_token() const;
  void set_account_token(const ::std::string& value);
  void set_account_token(const char* value);
  void set_account_token(const char* value, size_t size);
  ::std::string* mutable_account_token();
  ::std::string* release_account_token();
  void set_allocated_account_token(::std::string* account_token);

  // optional int32 server_uid = 3;
  void clear_server_uid();
  static const int kServerUidFieldNumber = 3;
  ::google::protobuf::int32 server_uid() const;
  void set_server_uid(::google::protobuf::int32 value);

  // optional int32 login_serverid = 4;
  void clear_login_serverid();
  static const int kLoginServeridFieldNumber = 4;
  ::google::protobuf::int32 login_serverid() const;
  void set_login_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgReqEnterServerLS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr account_token_;
  ::google::protobuf::int32 server_uid_;
  ::google::protobuf::int32 login_serverid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgReqEnterServerLS* default_instance_;
};
// -------------------------------------------------------------------

class MsgReqEnterServerResultSL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgReqEnterServerResultSL) */ {
 public:
  MsgReqEnterServerResultSL();
  virtual ~MsgReqEnterServerResultSL();

  MsgReqEnterServerResultSL(const MsgReqEnterServerResultSL& from);

  inline MsgReqEnterServerResultSL& operator=(const MsgReqEnterServerResultSL& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReqEnterServerResultSL& default_instance();

  void Swap(MsgReqEnterServerResultSL* other);

  // implements Message ----------------------------------------------

  inline MsgReqEnterServerResultSL* New() const { return New(NULL); }

  MsgReqEnterServerResultSL* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReqEnterServerResultSL& from);
  void MergeFrom(const MsgReqEnterServerResultSL& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgReqEnterServerResultSL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string account_name = 2;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional int32 login_serverid = 3;
  void clear_login_serverid();
  static const int kLoginServeridFieldNumber = 3;
  ::google::protobuf::int32 login_serverid() const;
  void set_login_serverid(::google::protobuf::int32 value);

  // optional string gate_ip = 4;
  void clear_gate_ip();
  static const int kGateIpFieldNumber = 4;
  const ::std::string& gate_ip() const;
  void set_gate_ip(const ::std::string& value);
  void set_gate_ip(const char* value);
  void set_gate_ip(const char* value, size_t size);
  ::std::string* mutable_gate_ip();
  ::std::string* release_gate_ip();
  void set_allocated_gate_ip(::std::string* gate_ip);

  // optional int32 gate_port = 5;
  void clear_gate_port();
  static const int kGatePortFieldNumber = 5;
  ::google::protobuf::int32 gate_port() const;
  void set_gate_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgReqEnterServerResultSL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 login_serverid_;
  ::google::protobuf::internal::ArenaStringPtr gate_ip_;
  ::google::protobuf::int32 gate_port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgReqEnterServerResultSL* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRegisterSW

// optional int32 peer_type = 1;
inline void MsgRegisterSW::clear_peer_type() {
  peer_type_ = 0;
}
inline ::google::protobuf::int32 MsgRegisterSW::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.peer_type)
  return peer_type_;
}
inline void MsgRegisterSW::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.peer_type)
}

// optional string listen_ip = 2;
inline void MsgRegisterSW::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterSW::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterSW::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_ip)
}
inline void MsgRegisterSW::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgRegisterSW.listen_ip)
}
inline void MsgRegisterSW::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgRegisterSW.listen_ip)
}
inline ::std::string* MsgRegisterSW::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterSW::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgRegisterSW.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterSW::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgRegisterSW.listen_ip)
}

// optional int32 listen_port = 3;
inline void MsgRegisterSW::clear_listen_port() {
  listen_port_ = 0;
}
inline ::google::protobuf::int32 MsgRegisterSW::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_port)
  return listen_port_;
}
inline void MsgRegisterSW::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_port)
}

// -------------------------------------------------------------------

// MsgRegisterWS

// optional int32 server_id = 1;
inline void MsgRegisterWS::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 MsgRegisterWS::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterWS.server_id)
  return server_id_;
}
inline void MsgRegisterWS::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterWS.server_id)
}

// -------------------------------------------------------------------

// MsgServerInfoWS_ServerInfo

// optional int32 peer_type = 1;
inline void MsgServerInfoWS_ServerInfo::clear_peer_type() {
  peer_type_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
  return peer_type_;
}
inline void MsgServerInfoWS_ServerInfo::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
}

// optional int32 server_id = 2;
inline void MsgServerInfoWS_ServerInfo::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
  return server_id_;
}
inline void MsgServerInfoWS_ServerInfo::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
}

// optional string listen_ip = 3;
inline void MsgServerInfoWS_ServerInfo::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgServerInfoWS_ServerInfo::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgServerInfoWS_ServerInfo::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
inline void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
inline void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
inline ::std::string* MsgServerInfoWS_ServerInfo::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgServerInfoWS_ServerInfo::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgServerInfoWS_ServerInfo::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}

// optional int32 listen_port = 4;
inline void MsgServerInfoWS_ServerInfo::clear_listen_port() {
  listen_port_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
  return listen_port_;
}
inline void MsgServerInfoWS_ServerInfo::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
}

// -------------------------------------------------------------------

// MsgServerInfoWS

// repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 1;
inline int MsgServerInfoWS::server_info_size() const {
  return server_info_.size();
}
inline void MsgServerInfoWS::clear_server_info() {
  server_info_.Clear();
}
inline const ::packet_ss::MsgServerInfoWS_ServerInfo& MsgServerInfoWS::server_info(int index) const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Get(index);
}
inline ::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::mutable_server_info(int index) {
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Mutable(index);
}
inline ::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::add_server_info() {
  // @@protoc_insertion_point(field_add:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >*
MsgServerInfoWS::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:packet_ss.MsgServerInfoWS.server_info)
  return &server_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >&
MsgServerInfoWS::server_info() const {
  // @@protoc_insertion_point(field_list:packet_ss.MsgServerInfoWS.server_info)
  return server_info_;
}

// -------------------------------------------------------------------

// MsgLogin2NodeGN

// optional int32 peer_type = 1;
inline void MsgLogin2NodeGN::clear_peer_type() {
  peer_type_ = 0;
}
inline ::google::protobuf::int32 MsgLogin2NodeGN::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgLogin2NodeGN.peer_type)
  return peer_type_;
}
inline void MsgLogin2NodeGN::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgLogin2NodeGN.peer_type)
}

// optional int32 server_id = 2;
inline void MsgLogin2NodeGN::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 MsgLogin2NodeGN::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgLogin2NodeGN.server_id)
  return server_id_;
}
inline void MsgLogin2NodeGN::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgLogin2NodeGN.server_id)
}

// -------------------------------------------------------------------

// MsgReqServerListLM

// optional string account_name = 1;
inline void MsgReqServerListLM::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReqServerListLM::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqServerListLM.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqServerListLM::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqServerListLM.account_name)
}
inline void MsgReqServerListLM::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqServerListLM.account_name)
}
inline void MsgReqServerListLM::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqServerListLM.account_name)
}
inline ::std::string* MsgReqServerListLM::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqServerListLM.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReqServerListLM::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqServerListLM.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqServerListLM::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqServerListLM.account_name)
}

// -------------------------------------------------------------------

// MsgServerListML

// optional int32 result = 1;
inline void MsgServerListML::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 MsgServerListML::result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerListML.result)
  return result_;
}
inline void MsgServerListML::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerListML.result)
}

// repeated .pb_base.ServerProfile servers = 2;
inline int MsgServerListML::servers_size() const {
  return servers_.size();
}
inline void MsgServerListML::clear_servers() {
  servers_.Clear();
}
inline const ::pb_base::ServerProfile& MsgServerListML::servers(int index) const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerListML.servers)
  return servers_.Get(index);
}
inline ::pb_base::ServerProfile* MsgServerListML::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerListML.servers)
  return servers_.Mutable(index);
}
inline ::pb_base::ServerProfile* MsgServerListML::add_servers() {
  // @@protoc_insertion_point(field_add:packet_ss.MsgServerListML.servers)
  return servers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile >*
MsgServerListML::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:packet_ss.MsgServerListML.servers)
  return &servers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_base::ServerProfile >&
MsgServerListML::servers() const {
  // @@protoc_insertion_point(field_list:packet_ss.MsgServerListML.servers)
  return servers_;
}

// optional .packet_ss.MsgReqServerListLM post_back = 3;
inline bool MsgServerListML::has_post_back() const {
  return !_is_default_instance_ && post_back_ != NULL;
}
inline void MsgServerListML::clear_post_back() {
  if (GetArenaNoVirtual() == NULL && post_back_ != NULL) delete post_back_;
  post_back_ = NULL;
}
inline const ::packet_ss::MsgReqServerListLM& MsgServerListML::post_back() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerListML.post_back)
  return post_back_ != NULL ? *post_back_ : *default_instance_->post_back_;
}
inline ::packet_ss::MsgReqServerListLM* MsgServerListML::mutable_post_back() {
  
  if (post_back_ == NULL) {
    post_back_ = new ::packet_ss::MsgReqServerListLM;
  }
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerListML.post_back)
  return post_back_;
}
inline ::packet_ss::MsgReqServerListLM* MsgServerListML::release_post_back() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgServerListML.post_back)
  
  ::packet_ss::MsgReqServerListLM* temp = post_back_;
  post_back_ = NULL;
  return temp;
}
inline void MsgServerListML::set_allocated_post_back(::packet_ss::MsgReqServerListLM* post_back) {
  delete post_back_;
  post_back_ = post_back;
  if (post_back) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgServerListML.post_back)
}

// -------------------------------------------------------------------

// MsgSyncLoginServerIdML

// optional int32 server_id = 1;
inline void MsgSyncLoginServerIdML::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 MsgSyncLoginServerIdML::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgSyncLoginServerIdML.server_id)
  return server_id_;
}
inline void MsgSyncLoginServerIdML::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgSyncLoginServerIdML.server_id)
}

// -------------------------------------------------------------------

// MsgWorldRegAtMasterWM

// optional int32 server_uid = 1;
inline void MsgWorldRegAtMasterWM::clear_server_uid() {
  server_uid_ = 0;
}
inline ::google::protobuf::int32 MsgWorldRegAtMasterWM::server_uid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgWorldRegAtMasterWM.server_uid)
  return server_uid_;
}
inline void MsgWorldRegAtMasterWM::set_server_uid(::google::protobuf::int32 value) {
  
  server_uid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgWorldRegAtMasterWM.server_uid)
}

// -------------------------------------------------------------------

// MsgWorldRegAtMasterAckMW

// optional int32 result = 1;
inline void MsgWorldRegAtMasterAckMW::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 MsgWorldRegAtMasterAckMW::result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgWorldRegAtMasterAckMW.result)
  return result_;
}
inline void MsgWorldRegAtMasterAckMW::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgWorldRegAtMasterAckMW.result)
}

// -------------------------------------------------------------------

// MsgReqEnterServerLS

// optional string account_name = 1;
inline void MsgReqEnterServerLS::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReqEnterServerLS::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerLS::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.account_name)
}
inline void MsgReqEnterServerLS::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerLS.account_name)
}
inline void MsgReqEnterServerLS::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerLS.account_name)
}
inline ::std::string* MsgReqEnterServerLS::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerLS.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReqEnterServerLS::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerLS.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerLS::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerLS.account_name)
}

// optional string account_token = 2;
inline void MsgReqEnterServerLS::clear_account_token() {
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReqEnterServerLS::account_token() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.account_token)
  return account_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerLS::set_account_token(const ::std::string& value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.account_token)
}
inline void MsgReqEnterServerLS::set_account_token(const char* value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerLS.account_token)
}
inline void MsgReqEnterServerLS::set_account_token(const char* value, size_t size) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerLS.account_token)
}
inline ::std::string* MsgReqEnterServerLS::mutable_account_token() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerLS.account_token)
  return account_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReqEnterServerLS::release_account_token() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerLS.account_token)
  
  return account_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerLS::set_allocated_account_token(::std::string* account_token) {
  if (account_token != NULL) {
    
  } else {
    
  }
  account_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_token);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerLS.account_token)
}

// optional int32 server_uid = 3;
inline void MsgReqEnterServerLS::clear_server_uid() {
  server_uid_ = 0;
}
inline ::google::protobuf::int32 MsgReqEnterServerLS::server_uid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.server_uid)
  return server_uid_;
}
inline void MsgReqEnterServerLS::set_server_uid(::google::protobuf::int32 value) {
  
  server_uid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.server_uid)
}

// optional int32 login_serverid = 4;
inline void MsgReqEnterServerLS::clear_login_serverid() {
  login_serverid_ = 0;
}
inline ::google::protobuf::int32 MsgReqEnterServerLS::login_serverid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerLS.login_serverid)
  return login_serverid_;
}
inline void MsgReqEnterServerLS::set_login_serverid(::google::protobuf::int32 value) {
  
  login_serverid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerLS.login_serverid)
}

// -------------------------------------------------------------------

// MsgReqEnterServerResultSL

// optional int32 result = 1;
inline void MsgReqEnterServerResultSL::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 MsgReqEnterServerResultSL::result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.result)
  return result_;
}
inline void MsgReqEnterServerResultSL::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.result)
}

// optional string account_name = 2;
inline void MsgReqEnterServerResultSL::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReqEnterServerResultSL::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerResultSL::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.account_name)
}
inline void MsgReqEnterServerResultSL::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerResultSL.account_name)
}
inline void MsgReqEnterServerResultSL::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerResultSL.account_name)
}
inline ::std::string* MsgReqEnterServerResultSL::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerResultSL.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReqEnterServerResultSL::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerResultSL.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerResultSL::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerResultSL.account_name)
}

// optional int32 login_serverid = 3;
inline void MsgReqEnterServerResultSL::clear_login_serverid() {
  login_serverid_ = 0;
}
inline ::google::protobuf::int32 MsgReqEnterServerResultSL::login_serverid() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.login_serverid)
  return login_serverid_;
}
inline void MsgReqEnterServerResultSL::set_login_serverid(::google::protobuf::int32 value) {
  
  login_serverid_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.login_serverid)
}

// optional string gate_ip = 4;
inline void MsgReqEnterServerResultSL::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReqEnterServerResultSL::gate_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerResultSL::set_gate_ip(const ::std::string& value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}
inline void MsgReqEnterServerResultSL::set_gate_ip(const char* value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}
inline void MsgReqEnterServerResultSL::set_gate_ip(const char* value, size_t size) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}
inline ::std::string* MsgReqEnterServerResultSL::mutable_gate_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgReqEnterServerResultSL.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReqEnterServerResultSL::release_gate_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgReqEnterServerResultSL.gate_ip)
  
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReqEnterServerResultSL::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    
  } else {
    
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgReqEnterServerResultSL.gate_ip)
}

// optional int32 gate_port = 5;
inline void MsgReqEnterServerResultSL::clear_gate_port() {
  gate_port_ = 0;
}
inline ::google::protobuf::int32 MsgReqEnterServerResultSL::gate_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgReqEnterServerResultSL.gate_port)
  return gate_port_;
}
inline void MsgReqEnterServerResultSL::set_gate_port(::google::protobuf::int32 value) {
  
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgReqEnterServerResultSL.gate_port)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_ss

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fserver_2eproto__INCLUDED
