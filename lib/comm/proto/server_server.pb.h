// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_server.proto

#ifndef PROTOBUF_server_5fserver_2eproto__INCLUDED
#define PROTOBUF_server_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace packet_ss {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_server_5fserver_2eproto();
void protobuf_AssignDesc_server_5fserver_2eproto();
void protobuf_ShutdownFile_server_5fserver_2eproto();

class MsgEnterPermissionAck;
class MsgEnterPermissionReq;
class MsgRegisterSW;
class MsgRegisterWS;
class MsgServerInfoWS;
class MsgServerInfoWS_ServerInfo;

enum MsgEnterPermissionAck_Result {
  MsgEnterPermissionAck_Result_ok = 0,
  MsgEnterPermissionAck_Result_key_invalid = 1,
  MsgEnterPermissionAck_Result_MsgEnterPermissionAck_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgEnterPermissionAck_Result_MsgEnterPermissionAck_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgEnterPermissionAck_Result_IsValid(int value);
const MsgEnterPermissionAck_Result MsgEnterPermissionAck_Result_Result_MIN = MsgEnterPermissionAck_Result_ok;
const MsgEnterPermissionAck_Result MsgEnterPermissionAck_Result_Result_MAX = MsgEnterPermissionAck_Result_key_invalid;
const int MsgEnterPermissionAck_Result_Result_ARRAYSIZE = MsgEnterPermissionAck_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgEnterPermissionAck_Result_descriptor();
inline const ::std::string& MsgEnterPermissionAck_Result_Name(MsgEnterPermissionAck_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgEnterPermissionAck_Result_descriptor(), value);
}
inline bool MsgEnterPermissionAck_Result_Parse(
    const ::std::string& name, MsgEnterPermissionAck_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgEnterPermissionAck_Result>(
    MsgEnterPermissionAck_Result_descriptor(), name, value);
}
// ===================================================================

class MsgRegisterSW : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgRegisterSW) */ {
 public:
  MsgRegisterSW();
  virtual ~MsgRegisterSW();

  MsgRegisterSW(const MsgRegisterSW& from);

  inline MsgRegisterSW& operator=(const MsgRegisterSW& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterSW& default_instance();

  void Swap(MsgRegisterSW* other);

  // implements Message ----------------------------------------------

  inline MsgRegisterSW* New() const { return New(NULL); }

  MsgRegisterSW* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterSW& from);
  void MergeFrom(const MsgRegisterSW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgRegisterSW* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peer_type = 1;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 1;
  ::google::protobuf::int32 peer_type() const;
  void set_peer_type(::google::protobuf::int32 value);

  // optional string listen_ip = 2;
  void clear_listen_ip();
  static const int kListenIpFieldNumber = 2;
  const ::std::string& listen_ip() const;
  void set_listen_ip(const ::std::string& value);
  void set_listen_ip(const char* value);
  void set_listen_ip(const char* value, size_t size);
  ::std::string* mutable_listen_ip();
  ::std::string* release_listen_ip();
  void set_allocated_listen_ip(::std::string* listen_ip);

  // optional int32 listen_port = 3;
  void clear_listen_port();
  static const int kListenPortFieldNumber = 3;
  ::google::protobuf::int32 listen_port() const;
  void set_listen_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgRegisterSW)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr listen_ip_;
  ::google::protobuf::int32 peer_type_;
  ::google::protobuf::int32 listen_port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterSW* default_instance_;
};
// -------------------------------------------------------------------

class MsgRegisterWS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgRegisterWS) */ {
 public:
  MsgRegisterWS();
  virtual ~MsgRegisterWS();

  MsgRegisterWS(const MsgRegisterWS& from);

  inline MsgRegisterWS& operator=(const MsgRegisterWS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterWS& default_instance();

  void Swap(MsgRegisterWS* other);

  // implements Message ----------------------------------------------

  inline MsgRegisterWS* New() const { return New(NULL); }

  MsgRegisterWS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterWS& from);
  void MergeFrom(const MsgRegisterWS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgRegisterWS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgRegisterWS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 server_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterWS* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerInfoWS_ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgServerInfoWS.ServerInfo) */ {
 public:
  MsgServerInfoWS_ServerInfo();
  virtual ~MsgServerInfoWS_ServerInfo();

  MsgServerInfoWS_ServerInfo(const MsgServerInfoWS_ServerInfo& from);

  inline MsgServerInfoWS_ServerInfo& operator=(const MsgServerInfoWS_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerInfoWS_ServerInfo& default_instance();

  void Swap(MsgServerInfoWS_ServerInfo* other);

  // implements Message ----------------------------------------------

  inline MsgServerInfoWS_ServerInfo* New() const { return New(NULL); }

  MsgServerInfoWS_ServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerInfoWS_ServerInfo& from);
  void MergeFrom(const MsgServerInfoWS_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgServerInfoWS_ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peer_type = 1;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 1;
  ::google::protobuf::int32 peer_type() const;
  void set_peer_type(::google::protobuf::int32 value);

  // optional int32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional string listen_ip = 3;
  void clear_listen_ip();
  static const int kListenIpFieldNumber = 3;
  const ::std::string& listen_ip() const;
  void set_listen_ip(const ::std::string& value);
  void set_listen_ip(const char* value);
  void set_listen_ip(const char* value, size_t size);
  ::std::string* mutable_listen_ip();
  ::std::string* release_listen_ip();
  void set_allocated_listen_ip(::std::string* listen_ip);

  // optional int32 listen_port = 4;
  void clear_listen_port();
  static const int kListenPortFieldNumber = 4;
  ::google::protobuf::int32 listen_port() const;
  void set_listen_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgServerInfoWS.ServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 peer_type_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::internal::ArenaStringPtr listen_ip_;
  ::google::protobuf::int32 listen_port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgServerInfoWS_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerInfoWS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgServerInfoWS) */ {
 public:
  MsgServerInfoWS();
  virtual ~MsgServerInfoWS();

  MsgServerInfoWS(const MsgServerInfoWS& from);

  inline MsgServerInfoWS& operator=(const MsgServerInfoWS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerInfoWS& default_instance();

  void Swap(MsgServerInfoWS* other);

  // implements Message ----------------------------------------------

  inline MsgServerInfoWS* New() const { return New(NULL); }

  MsgServerInfoWS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerInfoWS& from);
  void MergeFrom(const MsgServerInfoWS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgServerInfoWS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgServerInfoWS_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // optional int32 event = 1;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::google::protobuf::int32 event() const;
  void set_event(::google::protobuf::int32 value);

  // repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 2;
  int server_info_size() const;
  void clear_server_info();
  static const int kServerInfoFieldNumber = 2;
  const ::packet_ss::MsgServerInfoWS_ServerInfo& server_info(int index) const;
  ::packet_ss::MsgServerInfoWS_ServerInfo* mutable_server_info(int index);
  ::packet_ss::MsgServerInfoWS_ServerInfo* add_server_info();
  ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >*
      mutable_server_info();
  const ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >&
      server_info() const;

  // @@protoc_insertion_point(class_scope:packet_ss.MsgServerInfoWS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo > server_info_;
  ::google::protobuf::int32 event_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgServerInfoWS* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterPermissionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgEnterPermissionReq) */ {
 public:
  MsgEnterPermissionReq();
  virtual ~MsgEnterPermissionReq();

  MsgEnterPermissionReq(const MsgEnterPermissionReq& from);

  inline MsgEnterPermissionReq& operator=(const MsgEnterPermissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterPermissionReq& default_instance();

  void Swap(MsgEnterPermissionReq* other);

  // implements Message ----------------------------------------------

  inline MsgEnterPermissionReq* New() const { return New(NULL); }

  MsgEnterPermissionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterPermissionReq& from);
  void MergeFrom(const MsgEnterPermissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgEnterPermissionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string session_key = 2;
  void clear_session_key();
  static const int kSessionKeyFieldNumber = 2;
  const ::std::string& session_key() const;
  void set_session_key(const ::std::string& value);
  void set_session_key(const char* value);
  void set_session_key(const char* value, size_t size);
  ::std::string* mutable_session_key();
  ::std::string* release_session_key();
  void set_allocated_session_key(::std::string* session_key);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgEnterPermissionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr session_key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgEnterPermissionReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterPermissionAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet_ss.MsgEnterPermissionAck) */ {
 public:
  MsgEnterPermissionAck();
  virtual ~MsgEnterPermissionAck();

  MsgEnterPermissionAck(const MsgEnterPermissionAck& from);

  inline MsgEnterPermissionAck& operator=(const MsgEnterPermissionAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterPermissionAck& default_instance();

  void Swap(MsgEnterPermissionAck* other);

  // implements Message ----------------------------------------------

  inline MsgEnterPermissionAck* New() const { return New(NULL); }

  MsgEnterPermissionAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterPermissionAck& from);
  void MergeFrom(const MsgEnterPermissionAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgEnterPermissionAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgEnterPermissionAck_Result Result;
  static const Result ok =
    MsgEnterPermissionAck_Result_ok;
  static const Result key_invalid =
    MsgEnterPermissionAck_Result_key_invalid;
  static inline bool Result_IsValid(int value) {
    return MsgEnterPermissionAck_Result_IsValid(value);
  }
  static const Result Result_MIN =
    MsgEnterPermissionAck_Result_Result_MIN;
  static const Result Result_MAX =
    MsgEnterPermissionAck_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    MsgEnterPermissionAck_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return MsgEnterPermissionAck_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return MsgEnterPermissionAck_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return MsgEnterPermissionAck_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
  void clear_check_result();
  static const int kCheckResultFieldNumber = 1;
  ::packet_ss::MsgEnterPermissionAck_Result check_result() const;
  void set_check_result(::packet_ss::MsgEnterPermissionAck_Result value);

  // @@protoc_insertion_point(class_scope:packet_ss.MsgEnterPermissionAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int check_result_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_5fserver_2eproto();
  friend void protobuf_AssignDesc_server_5fserver_2eproto();
  friend void protobuf_ShutdownFile_server_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MsgEnterPermissionAck* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRegisterSW

// optional int32 peer_type = 1;
inline void MsgRegisterSW::clear_peer_type() {
  peer_type_ = 0;
}
inline ::google::protobuf::int32 MsgRegisterSW::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.peer_type)
  return peer_type_;
}
inline void MsgRegisterSW::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.peer_type)
}

// optional string listen_ip = 2;
inline void MsgRegisterSW::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterSW::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterSW::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_ip)
}
inline void MsgRegisterSW::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgRegisterSW.listen_ip)
}
inline void MsgRegisterSW::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgRegisterSW.listen_ip)
}
inline ::std::string* MsgRegisterSW::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgRegisterSW.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterSW::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgRegisterSW.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterSW::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgRegisterSW.listen_ip)
}

// optional int32 listen_port = 3;
inline void MsgRegisterSW::clear_listen_port() {
  listen_port_ = 0;
}
inline ::google::protobuf::int32 MsgRegisterSW::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterSW.listen_port)
  return listen_port_;
}
inline void MsgRegisterSW::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterSW.listen_port)
}

// -------------------------------------------------------------------

// MsgRegisterWS

// optional int32 server_id = 1;
inline void MsgRegisterWS::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 MsgRegisterWS::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgRegisterWS.server_id)
  return server_id_;
}
inline void MsgRegisterWS::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgRegisterWS.server_id)
}

// -------------------------------------------------------------------

// MsgServerInfoWS_ServerInfo

// optional int32 peer_type = 1;
inline void MsgServerInfoWS_ServerInfo::clear_peer_type() {
  peer_type_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::peer_type() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
  return peer_type_;
}
inline void MsgServerInfoWS_ServerInfo::set_peer_type(::google::protobuf::int32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.peer_type)
}

// optional int32 server_id = 2;
inline void MsgServerInfoWS_ServerInfo::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
  return server_id_;
}
inline void MsgServerInfoWS_ServerInfo::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.server_id)
}

// optional string listen_ip = 3;
inline void MsgServerInfoWS_ServerInfo::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgServerInfoWS_ServerInfo::listen_ip() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgServerInfoWS_ServerInfo::set_listen_ip(const ::std::string& value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
inline void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
inline void MsgServerInfoWS_ServerInfo::set_listen_ip(const char* value, size_t size) {
  
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}
inline ::std::string* MsgServerInfoWS_ServerInfo::mutable_listen_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgServerInfoWS_ServerInfo::release_listen_ip() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
  
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgServerInfoWS_ServerInfo::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    
  } else {
    
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgServerInfoWS.ServerInfo.listen_ip)
}

// optional int32 listen_port = 4;
inline void MsgServerInfoWS_ServerInfo::clear_listen_port() {
  listen_port_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS_ServerInfo::listen_port() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
  return listen_port_;
}
inline void MsgServerInfoWS_ServerInfo::set_listen_port(::google::protobuf::int32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.ServerInfo.listen_port)
}

// -------------------------------------------------------------------

// MsgServerInfoWS

// optional int32 event = 1;
inline void MsgServerInfoWS::clear_event() {
  event_ = 0;
}
inline ::google::protobuf::int32 MsgServerInfoWS::event() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.event)
  return event_;
}
inline void MsgServerInfoWS::set_event(::google::protobuf::int32 value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgServerInfoWS.event)
}

// repeated .packet_ss.MsgServerInfoWS.ServerInfo server_info = 2;
inline int MsgServerInfoWS::server_info_size() const {
  return server_info_.size();
}
inline void MsgServerInfoWS::clear_server_info() {
  server_info_.Clear();
}
inline const ::packet_ss::MsgServerInfoWS_ServerInfo& MsgServerInfoWS::server_info(int index) const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Get(index);
}
inline ::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::mutable_server_info(int index) {
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Mutable(index);
}
inline ::packet_ss::MsgServerInfoWS_ServerInfo* MsgServerInfoWS::add_server_info() {
  // @@protoc_insertion_point(field_add:packet_ss.MsgServerInfoWS.server_info)
  return server_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >*
MsgServerInfoWS::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:packet_ss.MsgServerInfoWS.server_info)
  return &server_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::packet_ss::MsgServerInfoWS_ServerInfo >&
MsgServerInfoWS::server_info() const {
  // @@protoc_insertion_point(field_list:packet_ss.MsgServerInfoWS.server_info)
  return server_info_;
}

// -------------------------------------------------------------------

// MsgEnterPermissionReq

// optional string account_name = 1;
inline void MsgEnterPermissionReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgEnterPermissionReq::account_name() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgEnterPermissionReq.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgEnterPermissionReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgEnterPermissionReq.account_name)
}
inline void MsgEnterPermissionReq::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgEnterPermissionReq.account_name)
}
inline void MsgEnterPermissionReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgEnterPermissionReq.account_name)
}
inline ::std::string* MsgEnterPermissionReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgEnterPermissionReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgEnterPermissionReq::release_account_name() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgEnterPermissionReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgEnterPermissionReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgEnterPermissionReq.account_name)
}

// optional string session_key = 2;
inline void MsgEnterPermissionReq::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgEnterPermissionReq::session_key() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgEnterPermissionReq.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgEnterPermissionReq::set_session_key(const ::std::string& value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet_ss.MsgEnterPermissionReq.session_key)
}
inline void MsgEnterPermissionReq::set_session_key(const char* value) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet_ss.MsgEnterPermissionReq.session_key)
}
inline void MsgEnterPermissionReq::set_session_key(const char* value, size_t size) {
  
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet_ss.MsgEnterPermissionReq.session_key)
}
inline ::std::string* MsgEnterPermissionReq::mutable_session_key() {
  
  // @@protoc_insertion_point(field_mutable:packet_ss.MsgEnterPermissionReq.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgEnterPermissionReq::release_session_key() {
  // @@protoc_insertion_point(field_release:packet_ss.MsgEnterPermissionReq.session_key)
  
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgEnterPermissionReq::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    
  } else {
    
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:packet_ss.MsgEnterPermissionReq.session_key)
}

// -------------------------------------------------------------------

// MsgEnterPermissionAck

// optional .packet_ss.MsgEnterPermissionAck.Result check_result = 1;
inline void MsgEnterPermissionAck::clear_check_result() {
  check_result_ = 0;
}
inline ::packet_ss::MsgEnterPermissionAck_Result MsgEnterPermissionAck::check_result() const {
  // @@protoc_insertion_point(field_get:packet_ss.MsgEnterPermissionAck.check_result)
  return static_cast< ::packet_ss::MsgEnterPermissionAck_Result >(check_result_);
}
inline void MsgEnterPermissionAck::set_check_result(::packet_ss::MsgEnterPermissionAck_Result value) {
  
  check_result_ = value;
  // @@protoc_insertion_point(field_set:packet_ss.MsgEnterPermissionAck.check_result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet_ss

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::packet_ss::MsgEnterPermissionAck_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::packet_ss::MsgEnterPermissionAck_Result>() {
  return ::packet_ss::MsgEnterPermissionAck_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fserver_2eproto__INCLUDED
